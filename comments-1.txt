results comment
__label__perfective Add marble diagrams for Single operators.--
__label__perfective Change hasException to hasThrowable--
__label__adaptive Trying to extend the Scheduler interface according- to the comments at -19.--
__label__adaptive RunAsync method for outputting multiple values--
__label__corrective forEach with Action1 but not Observer--I re-read the MSDN docs and found the previous implementation wasn't complying with the contract.--http://msdn.microsoft.com/en-us/library/hh211815(v=vs.103).aspx--I believe this now does.-
__label__perfective Extract UnsubscribeTester to top level--
__label__perfective Some cleaning up--
__label__corrective Trying to fix non-deterministic test--- not sure of a way other than putting Thread.sleep in here to give time after each CountDownLatch triggers for the process scheduler to execute the next line of each thread--See https://github.com/Netflix/RxJava/pull/201 for more information.-
__label__corrective 1.x: Fix Completable swallows- OnErrorNotImplementedException (-3904)--
__label__corrective Fix unit test after last() changed behavior--
__label__perfective Incoporate review suggestions.--Splits a compound unit test into to parts.-Uses mockito instead of a bespoke test object.-Removes unused import statements.-Changes the order of the Finally action w.r.t. onComplete/onError.-
__label__corrective Fixed byLine test to use line.separator system- property instead of \n.--
__label__adaptive Add CompositeSubscription--- also a utility method for creating a Subscription around a Future-
__label__perfective "Spare a few redundant calls in SleepingAction- around determining the delay value (-3903)--- Remove redundant outer conditional.-- Skip calling into System.currentTimeMillis()  which could potentially result in different values.-"
__label__perfective Adding missing javadocs to TestSubject (-1322)--
__label__adaptive Added takeLast to Observable--
__label__perfective "Reduce duplication by making ""schedule now"" the- special case--Forwards to ""schedule later"" with delay of 0 now.-"
__label__corrective "Wraps DoOnEach in a SafeObserver--This commit leverages the SafeObserver facility to get the desired-behavior in the face of exceptions.  Specifically  if any of the-operations performed within the doOnEach handler raises an exception -that exception will propagate through the observable chain.-"
__label__perfective "Switch to AtomicIntegerFieldUpdater and volatile- int  instead of AtomicBoolean--"
__label__perfective Refactored TakeUntil to use TakeWhile.--
__label__perfective Removed window between the two synchronized blocks.--
__label__perfective Added license header to OperationBuffer.--
__label__perfective ---
__label__perfective Forward subscription of wrapped subscriber--
__label__perfective additions to tests--
__label__corrective TakeWhile protect calls to predicate--
__label__perfective subscribe methods with typed Action arguments--
__label__perfective Restructure into smaller files--
__label__corrective Set threads to daemons so they don't prevent system- from exiting--- This applies to any pools RxJava itself creates. It will be up to users to do this for Executors they inject.-
__label__perfective Confusing Javadoc for `toObservable(Future)`- methods--https://github.com/Netflix/RxJava/issues/148-
__label__adaptive Implement a cached thread scheduler using event- loops--
__label__corrective non-deterministic- testUserSubscriberUsingRequestAsync--fix non-deterministic failures of BackpressureTests.testUserSubscriberUsingRequestAsync--I was able to replicate the occasional failure by putting it in a tight loop. With these changes it no longer fails.-
__label__corrective "Fix multiple subscription bug on operation filter--A new subscription must be created on every subscribe call  otherwise any-subscribe call after the first directly fails.-"
__label__corrective "Update Observable.isInternalImplementation  get rid- of NullPointerException--NullPointerException has been encountered during my tests. It is because java.lang.Class.getPackage() may return null ""... if no package information is available from the archive or codebase"" (documented feature).-"
__label__perfective Perf Tests with JMH--
__label__adaptive Add operators to create Observables from- BroadcastReceiver--it allows to listen global and local (with support LocalBroadcastManager) broadcasts-
__label__perfective unit tests for covariance--- refactoring so not everything for the entire Observable ends up in a single class-
__label__perfective Remove Unnecessary Subscription--- be explicit for error case in JoinObserver-
__label__corrective Fixed issue -417--
__label__perfective add synchronous test of resubscribe after error--
__label__perfective "added variance to Action*  too--"
__label__perfective Cleanup Javadocs--
__label__adaptive Added ChannelObservable.get--
__label__corrective "Added create with initial capacity  minor fix--"
__label__perfective Move last 6 remaining unit tests out.--
__label__corrective Delay: error cut ahead was not properly serialized--
__label__corrective Switched to a default scheduler that actually works- together with this operator.--
__label__perfective "updated a test and added another one  trying to get- the expected behavior right--"
__label__corrective 1.x: fix Completable.onErrorComplete(Func1) not- relaying function crash (-4027)--
__label__perfective "Better naming  and new test--... using to compare 0.19 and 0.20 so want in both.-"
__label__perfective Add unit tests for recursive scheduler usage--These tests came from @mairbek at https://github.com/Netflix/RxJava/pull/229-issuecomment-16115941-
__label__adaptive "Implemented periodic scheduling  too. Needs testing- now.--"
__label__corrective "fix sticky intent duplication  add tests for- OperatorBroadcast--"
__label__perfective Make Functions.from typesafe--
__label__adaptive Add Single.doAfterTerminate()--
__label__perfective made the public window methods more generic via the- basic (lol) super/extends fluff; also simplified api by removing a few- useless super definitions (there's no super of Opening and Closing)--
__label__perfective Baseline Performance Tests--Start of suite of general performance tests for comparing overall changes.-
__label__perfective made WINDOW_MAKER typed--
__label__perfective "Change order of generics for Func from R  T to T  R- to match C- Rx--"
__label__perfective Removed synchronized block as per RxJava guidelines- (6.7).--
__label__perfective Better name for worker class running scheduled- actions--
__label__corrective CurrentThreadScheduler Memory Leak Fixed-MIME-Version: 1.0-Content-Type: text/plain; charset=UTF-8-Content-Transfer-Encoding: 8bit--- Current/Immediate/NewThread/Executor Schedulers are passing unit tests-- Current/NewThread/Executor Schedulers do not leak memory on the recursion test (Immediate canâ€™t be used for recursion otherwise it stack overflows)-
__label__perfective Refactoring for consistent implementation approach.--Combined ObservableExtensions into Observable to match how Rx works (Observable.* methods)-
__label__corrective Performance refactoring: OperatorSubscribeFunction--- migrated Func1 to OperatorSubscribeFunction for internal operator implementations-- do not wrap with AtomicObserver when it's a trusted operator--https://github.com/Netflix/RxJava/issues/104-
__label__perfective javadoc interlinkings and other javadoc- improvements--
__label__perfective "use Java Subject<T  R> as contravariant in T and- covariant in R--"
__label__perfective Prevent direct instantiation of BlockingObservable- via no-arg constructor--- also questioning why to allow extending this and would like to make it a private constructor-
__label__corrective GroupBy GroupedObservables should not re-subscribe- to parent sequence--https://github.com/Netflix/RxJava/issues/282--Refactored to maintain a single subscription that propagates events to the correct child GroupedObservables.-
__label__perfective Handle concurrent unsubscription in drain (avoid- NPE).--
__label__perfective tidying up AbstractOnSubscribe javadocs--
__label__corrective Fix termination race condition in- OperatorPublish.dispatch--
__label__corrective Unlock in finally block--
__label__perfective Incorporate review suggestions.--- Changes finally0 to finallyDo.-- Removes unnecessary subscription-wrapping.-- Handle exceptions in onCompleted/onError-
__label__adaptive As per suggestions: Added single static instance of- ExecutorService for delayed posting Introduced ScheduledIOSAction to enable- CompositeSubscription--
__label__perfective Refactor test to use CountDownLatch instead of- Thread.sleep--
__label__adaptive Add doOnSubscribe for Single--
__label__perfective Beef up UnsubscribeTester--
__label__corrective Fixed issue -799 - Added break to possibly-infinite- loop in CompositeException.attachCallingThreadStack--
__label__corrective Fix the initialization of Completable.complete()- (-4146)--
__label__perfective 1.x: ConcatMapEager allow nulls from inner- Observables.--
__label__adaptive "Implement Scheduler method with dueTime--- added method: schedule(T state  Func2<Scheduler  T  Subscription> action  Date dueTime)-"
__label__perfective Fix non-deterministic unit test--
__label__corrective Fix autoConnect calling onStart twice.--
__label__adaptive 1.x: Expose Single.lift()--
__label__adaptive Implemented range operator--
__label__perfective ObserveOn/SubscribeOn unit tests--
__label__perfective GroupBy Test Improvement--ObserveOn was the wrong mechanism for delaying behavior as it was relying on the buffering of observeOn.-Now using delay() to delay the group since observeOn no longer buffers.-
__label__perfective "Fixed javadoc and comments  cleaned up a bit  and- tried to fix synchronization.--"
__label__perfective Add finally0 to Observable.java .--
__label__adaptive Add takeUntil support in Single--
__label__perfective ObserveOn and SubscribeOn concurrency unit tests--- these are very rudimentary and may have a determinism problem due to the Thread.sleep-
__label__perfective avoiding some synchronization on combineLatest--
__label__corrective Fixed a bug in the test scheduler that happened- when advancing time by a too little amount--
__label__adaptive Non-blocking implementation of ScheduledObserver--
__label__corrective Conditionals: Fix all but 2 tests--
__label__perfective Conditionals: Fix all but 2 tests--
__label__corrective Fix for back pressure on the alternate- subscription.--
__label__corrective add error handling for onNext failure so exceptions- don't get thrown up the stack but instead via onError--
__label__adaptive Add Single.fromCallable()--
__label__perfective remove warnings and cleanup--
__label__corrective HBASE-2513 hbase-2414 added bug where we'd- tight-loop if no root available--git-svn-id: https://svn.apache.org/repos/asf/hadoop/hbase/trunk@941546 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective HBASE-4606  Remove spam in HCM and fix a- list.size == 0--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1185326 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective HBASE-11813 CellScanner-advance may overflow- stack--
__label__corrective HBASE-11671 TestEndToEndSplitTransaction fails on- master (Mikhail Antonov)--
__label__corrective HBASE-10010 eliminate the put latency spike on- the new log file beginning--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1549384 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective HBASE-7579 HTableDescriptor equals method fails- if results are returned in a different order; REVERT -- OVERCOMMITTED--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1471053 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective HBASE-9366 TestHTraceHooks.testTraceCreateTable- errors out sometimes.--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1523816 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective HBASE-3746  Clean up CompressionTest to not- directly reference DistributedFileSystem--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1089684 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective HBASE-5857 RIT map in RS not getting cleared- while region opening--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1329470 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective HBASE-13958 RESTApiClusterManager calls kill()- instead of suspend() and resume()--
__label__corrective HBASE-5549 HBASE-5572 Master can fail if- ZooKeeper session expires (N Keywal)--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1301775 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective HBASE-14807 TestWALLockup is flakey--
__label__corrective HBASE-2040  Fixes to group commit--git-svn-id: https://svn.apache.org/repos/asf/hadoop/hbase/trunk@889775 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective HADOOP-1424. TestHBaseCluster fails with- IllegalMonitorStateException. Fix regression introduced by HADOOP-1397.--git-svn-id: https://svn.apache.org/repos/asf/lucene/hadoop/trunk/src/contrib/hbase@541095 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective HBASE-2806 DNS hiccups cause uncaught NPE in- HServerAddress-getBindAddress--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@960650 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective HBASE-1192 LRU-style map for the block cache--git-svn-id: https://svn.apache.org/repos/asf/hadoop/hbase/trunk@780527 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective "HBASE-1647 Filter-filterRow is called too often - filters rows it shouldn't have -- reversed it for a moment; it may have- broken things -- not sure yet--git-svn-id: https://svn.apache.org/repos/asf/hadoop/hbase/trunk@798510 13f79535-47bb-0310-9956-ffa450edef68-"
__label__adaptive HBASE-3070 Add to hbaseadmin means of shutting- down a regionserver--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1003702 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective HBASE-2397 Bytes.toStringBinary escapes printable- chars--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@951840 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective HBASE-1447  Take last version of the hbase-1249- design doc. and make documentation out of it--git-svn-id: https://svn.apache.org/repos/asf/hadoop/hbase/trunk@785081 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective HBASE-3313 Table name isn't checked in- isTableEnabled/isTableDisabled--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1081431 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective HBASE-10194 [Usability]: Instructions in- CompactionTool no longer accurate because of namespaces--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1552229 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive HBASE-6427 Pluggable compaction and scan policies- via coprocessors--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1367361 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective HBASE-2787  PE is confused about flushCommits--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@957750 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective HBASE-10606 Bad timeout in- RpcRetryingCaller-callWithRetries w/o parameters--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1572124 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective HBASE-7703 Eventually all online snapshots fail- due to Timeout at same regionserver.--Online snapshot attempts would fail due to timeout because a rowlock could not be obtained.  Prior to this a-cancellation occurred which likely grabbed the lock without cleaning it properly. The fix here is to use nice cancel-instead of interrupting cancel on failures.----git-svn-id: https://svn.apache.org/repos/asf/hbase/branches/hbase-7290@1445866 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive HBASE-11920 Add CP hooks for ReplicationEndPoint--
__label__adaptive HBASE-8383 Support lib/*jar inside coprocessor- jar--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1471754 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective HBASE-10066. Use ByteArrayOutputStream-writeTo- where appropriate--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1547294 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective HBASE-6667 TestCatalogJanitor occasionally fails;- PATCH THAT ADDS DEBUG AROUND FAILING TEST--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1379682 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective "HBASE-6529 With HFile v2  the region server will- always perform an extra copy of source files--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1372313 13f79535-47bb-0310-9956-ffa450edef68-"
__label__perfective HBASE-1404 minor edit of regionserver logging- messages--git-svn-id: https://svn.apache.org/repos/asf/hadoop/hbase/trunk@773627 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective HBASE-9227 RESTServer should handle the loginUser- correctly--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1514440 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective HBASE-1869 IndexedTable delete fails when used in- conjunction with RowLock()--git-svn-id: https://svn.apache.org/repos/asf/hadoop/hbase/trunk@819060 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective HBASE-11558 Caching set on Scan object gets lost- when using TableMapReduceUtil in 0.95+ (Ishan Chhabra)--
__label__perfective HBASE-1938 Make in-memory table scanning faster ;-  reverted 20110726_1938_MemStore.patch till we figure why it seems to slow- tests--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1151653 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective HBASE-11865 Result implements CellScannable;- rather it should BE a CellScanner--
__label__adaptive HBASE-6400 Add getMasterAdmin() and- getMasterMonitor() to HConnection (Enis)--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1363009 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective HBASE-2156  HBASE-2037 broke Scan--git-svn-id: https://svn.apache.org/repos/asf/hadoop/hbase/trunk@902213 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective HBASE-10686 [WINDOWS] TestStripeStoreFileManager- fails on windows--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1575011 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective HBASE-2781  ZKW.createUnassignedRegion doesn't- make sure existing znode is             in the right state (Karthik- Ranganathan via JD)--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@963910 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective HBASE-10556 Possible data loss due to non-handled- DroppedSnapshotException for user-triggered flush from client/shell--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1571501 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective HBASE-3387 Pair does not deep check arrays for- equality--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1053484 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective "HBASE-8355:- BaseRegionObserver-pre(Compact|Flush|Store)ScannerOpen returns null (Andrew- Purtell  Jesse Yates)--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1483094 13f79535-47bb-0310-9956-ffa450edef68-"
__label__perfective HBASE-8062 Replace HBaseFsck.debugLsr() in- TestFlushSnapshotFromClient with FSUtils.logFileSystemState()--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1463646 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive HBASE-12731 Heap occupancy based client pushback--
__label__perfective "HBASE-2889 Tool to look at HLogs -- parse and- tail -f; added part 1  some fixup of hlog main--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@995222 13f79535-47bb-0310-9956-ffa450edef68-"
__label__corrective HBASE-12137 Alter table add cf doesn't do- compression test (Virag Kothari)--
__label__corrective HADOOP-2308 null regioninfo breaks meta scanner--git-svn-id: https://svn.apache.org/repos/asf/lucene/hadoop/trunk/src/contrib/hbase@599875 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective HBASE-8287 TestRegionMergeTransactionOnCluster- failed in trunk build -4010--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1465528 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective HBASE-2365 Double-assignment around split--git-svn-id: https://svn.apache.org/repos/asf/hadoop/hbase/trunk@929856 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive HBASE-9369 Add support for 1- and 2-byte integers- in OrderedBytes and provide types (He Liangliang)--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1524297 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective "Fixing broken build... forgot to add- JVMClusterUtil  etc.--git-svn-id: https://svn.apache.org/repos/asf/hadoop/hbase/trunk@939848 13f79535-47bb-0310-9956-ffa450edef68-"
__label__corrective HBASE-8703 [WINDOWS] Timed-out processes exit- with non-zero code causing HealthChecker to report incorrectly. ADDENDUM- patch to fix flaky test--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1499047 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective HBASE-4861 Fix some misspells and extraneous- characters in logs; set some to TRACE--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1205732 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective HBASE-4169 FSUtils LeaseRecovery for non HDFS- FileSystems; added 4169-correction.txt  correction--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1155441 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective HBASE-10449 Wrong execution pool configuration in- HConnectionManager--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1563878 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective HBASE-6170 Timeouts for row lock and scan should- be separate (Chris Trezzo)--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1354325 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive "[jira] [HBASE-5074] Support checksums in HBase- block cache--Author: Dhruba--Summary:-HFile is enhanced to store a checksum for each block. HDFS checksum verification-is avoided while reading data into the block cache. On a checksum verification-failure  we retry the file system read request with hdfs checksums switched on-(thanks Todd).--I have a benchmark that shows that it reduces iops on the disk by about 40%. In-this experiment  the entire memory on the regionserver is allocated to the-regionserver's jvm and the OS buffer cache size is negligible. I also measured-negligible (<5%) additional cpu usage while using hbase-level checksums.--The salient points of this patch:--1. Each hfile's trailer used to have a 4 byte version number. I enhanced this so-that these 4 bytes can be interpreted as a (major version number  minor-version). Pre-existing hfiles have a minor version of 0. The new hfile format-has a minor version of 1 (thanks Mikhail). The hfile major version remains-unchanged at 2. The reason I did not introduce a new major version number is-because the code changes needed to store/read checksums do not differ much from-existing V2 writers/readers.--2. Introduced a HFileSystem object which is a encapsulates the FileSystem-objects needed to access data from hfiles and hlogs.  HDFS FileSystem objects-already had the ability to switch off checksum verifications for reads.--3. The majority of the code changes are located in hbase.io.hfie package. The-retry of a read on an initial checksum failure occurs inside the hbase.io.hfile-package itself.  The code changes to hbase.regionserver package are minor.--4. The format of a hfileblock is the header followed by the data followed by the-checksum(s). Each 16 K (configurable) size of data has a 4 byte checksum.  The-hfileblock header has two additional fields: a 4 byte value to store the-bytesPerChecksum and a 4 byte value to store the size of the user data-(excluding the checksum data). This is well explained in the associated-javadocs.--5. I added a test to test backward compatibility. I will be writing more unit-tests that triggers checksum verification failures aggressively. I have left a-few redundant log messages in the code (just for easier debugging) and will-remove them in later stage of this patch. I will also be adding metrics on-number of checksum verification failures/success in a later version of this-diff.--6. By default  hbase-level checksums are switched on and hdfs level checksums-are switched off for hfile-reads. No changes to Hlog code path here.--Test Plan: The default setting is to switch on hbase checksums for hfile-reads -thus all existing tests actually validate the new code pieces. I will be writing-more unit tests for triggering checksum verification failures.--Reviewers: mbautin--Reviewed By: mbautin--CC: JIRA  tedyu  mbautin  dhruba  todd  stack--Differential Revision: https://reviews.facebook.net/D1521--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1298641 13f79535-47bb-0310-9956-ffa450edef68-"
__label__corrective HBASE-563   TestRowFilterAfterWrite erroneously- sets master address to 0.0.0.0:60100 rather than relying on conf--git-svn-id: https://svn.apache.org/repos/asf/hadoop/hbase/trunk@644948 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective HBASE-8033 Break TestRestoreSnapshotFromClient- into TestRestoreSnapshotFromClient and TestCloneSnapshotFromClient (Ted Yu)--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1454186 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective HBASE-8351 Minor typo in Bytes- IllegalArgumentException throw (Raymond Liu)--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1468291 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective HBASE-9287 TestCatalogTracker depends on the- execution order--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1516292 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective HBASE-4131 Make the Replication Service pluggable- via a standard interface definition--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1174963 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive HBASE-12366 Add login code to HBase Canary tool- (Srikanth Srungarapu)--
__label__perfective HBASE-3017 More log pruning--M conf/log4j.properties-  Make ZKW log at INFO-level-M src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java-  Log message cleanup.-M src/main/java/org/apache/hadoop/hbase/master/HMaster.java-  Remove excessive hostname+port qualifier on master for zk messages-M src/main/java/org/apache/hadoop/hbase/master/MasterFileSystem.java-  Log message cleanup-M src/main/java/org/apache/hadoop/hbase/master/ServerManager.java-  Format the ServerMonitor message.-M src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java-  Remove excessive hostname on zk message id; just add port-M src/main/java/org/apache/hadoop/hbase/zookeeper/ZKAssign.java-  Cleanup of messages.---git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@999057 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective HBASE-7923 force unassign can confirm region- online on any RS to get rid of double assignments--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1464232 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective HBASE-11499- AsyncProcess.buildDetailedErrorMessage concatenates strings using + in a loop- (Mike Drob)--
__label__corrective HBASE-9600 TestColumnSchemaModel and- TestTableSchemaModel test cases are failing with IBM IBM Java 6--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1525179 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive HBASE-1200 Add bloomfilters--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@946464 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective HBASE-11248-KeyOnlyKeyValue-toString() passes- wrong offset to keyToString() (Ram)--
__label__perfective HBASE-5259 Normalize the RegionLocation in- TableInputFormat by the reverse DNS lookup (Liyin Tang)--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1238774 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective HBASE-1816 Master rewrite; should have removed- safe-mode from regionserver-side too -- Needed to remove the wait up in top- of flush and compactions threads-- used to wait on safe mode... was stuck- there...--git-svn-id: https://svn.apache.org/repos/asf/hadoop/hbase/trunk@830844 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective HBASE-2124  Useless exception in HMaster on- startup--git-svn-id: https://svn.apache.org/repos/asf/hadoop/hbase/trunk@899441 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective HBASE-8299 ExploringCompactionPolicy can get- stuck in rare cases.--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1475966 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective HADOOP-2295 Fix assigning a region to multiple- servers--git-svn-id: https://svn.apache.org/repos/asf/lucene/hadoop/trunk/src/contrib/hbase@599578 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective HBASE-3653 : Parallelize Server Requests on HBase- Client--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1082648 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective HBASE-1386 NPE in housekeeping--git-svn-id: https://svn.apache.org/repos/asf/hadoop/hbase/trunk@772703 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective HBASE-7307 MetaReader.tableExists should not- return false if the specified table regions has been split (Rajesh)--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1419998 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective HBASE-2057  Cluster won't stop--git-svn-id: https://svn.apache.org/repos/asf/hadoop/hbase/trunk@894111 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective HBASE-2757. Fix flaky TestFromClientSide test by- forcing region assignment--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@956716 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective HBASE-1136  HashFunction inadvertently destroys- some randomness; REVERTING--git-svn-id: https://svn.apache.org/repos/asf/hadoop/hbase/trunk@735880 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective fix spurious 400s produced by test--git-svn-id: https://svn.apache.org/repos/asf/hadoop/hbase/trunk@790486 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective HBASE-3591 completebulkload doesn't honor generic- -D options--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1076709 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective HBASE-7715 FSUtils-waitOnSafeMode can incorrectly- loop on standby NN (Ted Yu)--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1440600 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive HBASE-1537 Intra-row scanning; apply limit over- multiple families--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@951682 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective "HBASE-3082  For ICV gets  first look in MemStore- before reading StoreFiles (Prakash via jgray)--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1026910 13f79535-47bb-0310-9956-ffa450edef68-"
__label__perfective HBASE-920 Make region balancing sloppier--git-svn-id: https://svn.apache.org/repos/asf/hadoop/hbase/trunk@704781 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive HBASE-798  Provide Client API to explicitly lock- and unlock rows (Jonathan Gray via Jim Kellerman)--git-svn-id: https://svn.apache.org/repos/asf/hadoop/hbase/trunk@685391 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive HBASE-1552 provide version running on cluster via- getClusterStatus--git-svn-id: https://svn.apache.org/repos/asf/hadoop/hbase/trunk@786666 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective HBASE-1142 Cleanup thrift server; remove Text and- profuse DEBUG messaging--git-svn-id: https://svn.apache.org/repos/asf/hadoop/hbase/trunk@736495 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective HBASE-15354 Use same criteria for clearing meta- cache for all operations (addendum) (Ashu Pachauri)--
__label__perfective HBASE-10818. Add integration test for bulkload- with replicas (Nick Dimiduk and Devaraj Das)--
__label__corrective HBASE-1866 Scan(Scan) copy constructor does not- copy value of cacheBlocks--git-svn-id: https://svn.apache.org/repos/asf/hadoop/hbase/trunk@818656 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective HBASE-1773  Fix broken tests (setWriteBuffer now- throws IOE)--git-svn-id: https://svn.apache.org/repos/asf/hadoop/hbase/trunk@805236 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective HBASE-5927 SSH and DisableTableHandler happening- together does not clear the znode of the region and RIT map (Rajesh)--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1339913 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective "HBASE-3429 HBaseObjectWritable should support- arrays of any Writable or Serializable  not just Writable[]--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1056548 13f79535-47bb-0310-9956-ffa450edef68-"
__label__corrective HBASE-9095. AssignmentManager's handleRegion- should respect the single threaded nature of the processing--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1510799 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective HBASE-11370 SSH doesn't need to scan meta if not- using ZK for assignment--
__label__corrective HBASE-8737 [replication] Change replication RPC- to use cell blocks--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1499118 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive HBASE-4460  Support running an embedded- ThriftServer within a RegionServer (jgray)--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1186586 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive HBASE-10885 Support visibility expressions on- Deletes (Ram)--
__label__adaptive HBASE-1722 Add support for exporting HBase- metrics via JMX--git-svn-id: https://svn.apache.org/repos/asf/hadoop/hbase/trunk@813229 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive HBASE-8921 [thrift2] Add GenericOptionsParser to- Thrift 2 server--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1501982 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive HBASE-12176 WALCellCodec Encoders support for- non-KeyValue Cells (Anoop Sam John)--
__label__adaptive HBASE-9999 Add support for small reverse scan--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1573949 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive HBASE-7197. Add multi get to RemoteHTable- (Elliott Clark)--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1422143 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive HBASE-3167 HBase Export: Add ability to export- specific Column Family; Turn Block Cache off during export; improve usage doc--git-svn-id: https://svn.apache.org/repos/asf/hbase/trunk@1028546 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective "Test deleting the percolate type differently.- Instead of checking the types exist api  register a DocumentTypeListener that- notifies when percolate queries have been cleared.--"
__label__adaptive "Cluster Health API: Add `wait_for_nodes` (accepts- ""N""  ""<N""  "">N""  ""<=N""  and "">=N"")  closes -269.--"
__label__perfective "improve handling of memory caching with file- system  only force compound file when really needed (when an extension that- exists within the compound file is part of the memory cached extensions)--"
__label__perfective "Added GeoDistance test which verifies the- difference in behaviour between ARC and PLANE  causing elliptical results--"
__label__adaptive "NullPointerException for invalid faceted query - closes -1136.--"
__label__perfective [TEST] Added test that verifies data integrity- during and after a simulated network split.--
__label__corrective Cut over StringScriptDataComparator to use- BytesRef instead of Strings--Closes -2920-
__label__perfective clean code--
__label__corrective test: fix and simplify logic--
__label__corrective "fix cluster state mapping informaton  return it- with the mapping name as key and source field--"
__label__perfective Optimize aliases processing--Closes- 2832-
__label__corrective Fix- AckClusterUpdateSettingsIT.testClusterUpdateSettingsAcknowledgement() after- changes in -14259--Closes -14278-
__label__perfective "add hasSingleArrayBackingStorage allow for- optimization only when there really is a single array  and not when there is- a multi dimensional one--"
__label__perfective [TEST] renamed variables in ScriptServiceTests--
__label__perfective Fix typo in Hunspell logging--
__label__adaptive inital support for zen discovery module- (multicast discovery implemented)--
__label__perfective Simplify TestCluster--TestCluster now doesn't use any reference counting anymore and-testcluster names are based on creation time to prevent confilcts if-builds hang.-
__label__perfective "Tests: Add test for parsing ""_name"" field in- RangeQueryParser--"
__label__perfective [TEST] fixed TestCluster size() javadocs--
__label__adaptive "Query DSL: Add `and`  `or`  and `not` filters - closes -216--"
__label__perfective clean-up long values--
__label__corrective Fix file handle leak in readBlob method of- AbstractFsBlobContainer--
__label__adaptive Added clear scroll api.--The clear scroll api allows clear all resources associated with a `scroll_id` by deleting the `scroll_id` and its associated SearchContext.--Closes -3657-
__label__perfective Small cleanup--
__label__adaptive "Allow to configure a common logger prefix using- `es.logger.prefix` system prop  closes -360.--"
__label__perfective fix name--
__label__corrective "introduce read/writeSharedString while streaming- currently  we treat all strings as shared (either by full equality or- identity equality)  while almost all times we know if they should be- serialized as shared or not. Add an explicitly write/readSharedString  and- use it where applicable  and all other write/readString will not treat them- as shared relates to -3322--"
__label__corrective "Change default operator to ""or"" for- ""low_freq_operator"" and ""high_freq_operator"" parameters for ""common"" queries--Closes -3178-"
__label__perfective "add a marker CachedFilter this allows to easily- and globally check if we cache a filter or not  all filter caching uses this- marker interface--"
__label__adaptive "Added support for acknowledgements to update- cluster settings api--As a side note  the internal reroute call is now part of the ack mechanism. That means that if the response contains acknowledged flag  the internal reroute that was eventually issued was acknowledged too. Also  even if the request is not acknowledged  the reroute is issued before returning  which means that there is no need to manually call reroute afterwards to make sure the new settings are immediately applied.--Closes -3995-"
__label__adaptive "Http Transport: Allow to configure- `max_header_size`  `max_initial_line_length`  and `max_chunk_size`  closes- -1174.--"
__label__corrective Add missing index name to indexing slow log--This was lost in refactoring even on the 2.x branch. The slow-log-is not per index not per shard anymore such that we don't add the-shard ID as the logger prefix. This commit adds back the index-name as part of the logging message not as a prefix on the logger-for better testabilitly.--Closes -17025-
__label__adaptive Added KeywordRepeatFilter that allows emitting- stemmed and unstemmed versions of the same token if stemmers are used--Closes -2753-
__label__corrective Catch AmazonClientExceptions to prevent- connection loss If the AWS client throws an exception (e.g: because of a DNS- failure) it will end up killing the rejoin thread and stop retrying which can- lead to a node getting stuck unable to rejoin the cluster.--Closes -30.-
__label__adaptive zen disco: support for a node to act as a client- (and not become master) using discovery.zen.master setting (default to true).- It will automatically be set to false when node.client is set to true.--
__label__perfective Facets: deprecation.--Users are encouraged to move to the new aggregation framework that was-introduced in Elasticsearch 1.0.--Close -6485-
__label__adaptive "Translog: Implement a file system based translog- and make it the default  closes -260.--"
__label__perfective "Introduced common test methods in- MatchedQueriesTests (e.g. createIndex  ensureGreen  refresh  assertHitCount)--"
__label__perfective Migrating NodesInfo API to use plugins instead of- singular plugin--In order to be consistent (and because in 1.0 we switched from-parameter driven information to specifzing the metrics as part of the URI)-this patch moves from 'plugin' to 'plugins' in the Nodes Info API.-
__label__corrective "Fix parsing of file based template loading--We support three different settings in templates--* ""settings"" : { ""index"" : { ""number_of_shards"" : 12 } }-* ""settings"" : { ""index.number_of_shards"" : 12 }-* ""settings"" : { ""number_of_shards"" : 12 }--The latter one was not supported by the fix in -4235--This commit fixes this issue and uses randomized testing to test any of the three cases above when running integration tests.--Closes -4411-"
__label__adaptive refactor sub fetch phase to also allow for hits- level execution--
__label__adaptive support yaml detection on char sequence--
__label__corrective [TEST] Stabelize MoreLikeThisActionTests--The `testCompareMoreLikeThisDSLWithAPI` test compares results from query-and API which might query different shards. Those shares might use-different doc IDs internally to disambiguate. This commit resorts the-results and compares them after stable disambiguation.-
__label__corrective Percolator response now always returns the- `matches` key.--Closes -4881-
__label__perfective add debug log if using compressed stored fields--
__label__adaptive If matching root doc's inner objects don't match- the `nested_filter` then the `missing` value should be used to sort the root- doc. Closes -3020--
__label__corrective [TEST] Don't delete data dirs after test - only- delete their content.--Closes -5815-
__label__perfective "Improved test  printed out potential shard- failures--"
__label__corrective only pull Fields once from the reader--
__label__perfective "Optimize multiple cluster state processing on- receiving nodes Nodes that receive the cluster state  and they have several- of those pending  can optimize and try and process potentially only one of- those. closes -5139--"
__label__corrective Fix- `indices.recovery.concurrent_small_file_streams` not being dynamically- settable--Fixes -4094-
__label__perfective "Added support for acknowledgement from other- nodes in open/close index api--The open/close index api now waits for an acknowledgement from all the other nodes before returning its response  till the timeout (configurable  default 10 secs) expires. The returned acknowledged flag reflects whether the cluster state change was acknowledged by all the nodes or the timeout expired before.--Closes -3400-"
__label__perfective move DatabaseReaders initialization to- IngestGeoIpPlugin-onModule--
__label__corrective lucene 4: use the proper token stream to return--
__label__perfective rename node to DiscoveryNode--
__label__corrective "Testing: Add test rule to repeat tests on binding- exceptions--Due to the possibility of ports being already used when choosing a-random port  it makes sense to simply repeat a unit test upon a bind-exception.--This commit adds a junit rule  which does exactly this and does not-require you to change the test code and add loops.--Closes -9010-"
__label__corrective Don't allow unallocated indexes to be closed.--Closes -3313-
__label__perfective "Tests: Use all found index files instead of- static list for static bwc tests--It is a pain to add a new static index  and then have to update the old-index test.  This removes the need for the latter step.--closes -9854-"
__label__adaptive add an index level setting to disable/enable- purging of expired docs (issue -1791)--
__label__perfective "Remove Infinity values for Range facets when no- docs match the range  closes -1366.--"
__label__adaptive Added UNICODE_CHARACTER_CLASS support to Regex- flags. This flag is only supported in Java7 and is ignored if set on a java 6- JVM--Closes -2895-
__label__perfective "BytesStreamOutput default size should be 2k- instead of 32k We changed the default of BytesStreamOutput (used in various- places in ES) to 32k from 1k with the assumption that most stream tend to be- large. This doesn't hold for example when indexing small documents and adding- them using XContentBuilder (which will have a large overhead).--Default the buffer size to 2k now  but be relatively aggressive in expanding the buffer when below 256k (double it)  and just use oversize (1/8th) when larger to try and minimize garbage and buffer copies.--relates to -3624-closes -3638-"
__label__corrective "Sorting on _score in the URI format is reversed - closes -1191.--"
__label__corrective Changed GeoEncodingTests to ensure accuracy- always >1mm due to rounding errors with very small numbers--
__label__corrective Fixed resolving closest nested object when- sorting on a field inside nested object--
__label__corrective Fix RobinEngineIntegrationTest - missed to- explicitly create the index--
__label__corrective Fix NPE in RangeAggregator--
__label__corrective "Internal: use AtomicInteger instead of volatile- int for the current action filter position--Also improved filter chain tests to not rely on execution time  and made filter chain tests look more similar to what happens in reality by removing multiple threads creation in testTooManyContinueProcessing (something we don't support anyway  makes little sense to test it).--Closes -7021-"
__label__perfective Remove dead code and add missing @Override- annotations--
__label__perfective [TEST] Re-add rebalance disable setting in- RecoveryFromGatewayTests--
__label__corrective "fix a bug in new checksum mechanism that caused- for replicas not to retain the _checksums file. Also  now that checksums are- widely used  consider files without checksums as ones that need to be- recovered--"
__label__perfective Fielddata: Remove- BytesValues.WithOrdinals.currentOrd and copyShared.--These methods don't exist in Lucene's sorted set doc values.--Relates to -6524-
__label__perfective "Recovery Settings: Change settings (still support- old settings) and allow for more dynamic settings  closes -1303.--"
__label__perfective optimize boolean queries when possible--
__label__perfective "Remove get index templates deprecated methods In- 0.90.4  we deprecated some code:--* `GetIndexTemplatesRequest-GetIndexTemplatesRequest(String)` moved to `GetIndexTemplatesRequest-GetIndexTemplatesRequest(String...)`-* `GetIndexTemplatesRequest-name(String)` moved to `GetIndexTemplatesRequest-names(String...)`-* `GetIndexTemplatesRequest-name()` moved to `GetIndexTemplatesRequest-names()`--* `GetIndexTemplatesRequestBuilder-GetIndexTemplatesRequestBuilder(IndicesAdminClient  String)` moved to  `GetIndexTemplatesRequestBuilder-GetIndexTemplatesRequestBuilder(IndicesAdminClient  String...)`--* `IndicesAdminClient-prepareGetTemplates(String)` moved to `IndicesAdminClient-prepareGetTemplates(String...)`--* `AbstractIndicesAdminClient-prepareGetTemplates(String)` moved to `AbstractIndicesAdminClient-prepareGetTemplates(String...)`--We can now remove that old methods in 1.0.--**Note**: it breaks the Java API--Relative to -2532.-Closes -3681.-"
__label__adaptive use custom similarity in search (if there is one)--
__label__perfective improve memcached test--
__label__adaptive "Allow for plugins to register REST filter (better- support with async execution and some renaming)  closes -1658.--"
__label__corrective lucene 4: Fixed- BitsetExecutionChildQuerySearchTests class.--
__label__corrective "Shard Allocation: Closed indices are not properly- taken into account when rebalancing  closes -858.--"
__label__adaptive Allow additional settings for the node in- ESSingleNodeTestCase--This change adds a method that extending classes can override to provide additional settings-for the node used in a single node test case.-
__label__perfective "remove equals/hashcode as part of Pipeline and- adapt tests--Only MutateProcessor implemented equals / hashcode hence we would only use that one in our tests  since they relied on them. Better to not rely on equals/hashcode  drop them and mock processor/pipeline in our tests that need them. That also allow to make MutateProcessor constructor package private as the other processors.-"
__label__perfective pass on node seed to the node level settings in- TestCluster--
__label__corrective Fix test failure.--
__label__corrective fixed issue from merge--
__label__perfective add anotehr test--
__label__perfective Catch and Log RejectedExecutionException in async- ping--
__label__perfective Rename Engine-seacher() into- Engine-acquireSearcher()--The name should reflect that the caller is responsible for-releaseing the searcher again.-
__label__perfective "add ""same"" thread pool type (really  just for- testing)--"
__label__adaptive "Histogram Facet: Allow to define a key field and- value script  closes -517.--"
__label__perfective remove unused code--
__label__perfective "Mapping: When _all is disabled  optimize to not- gather all entries  closes -722.--"
__label__corrective Fix possible exception in toCamelCase method--
__label__perfective Randomize node level setting per node not per- cluster--
__label__perfective Aggregations: change to default shard_size in- terms aggregation--The default shard size in the terms aggregation now uses BucketUtils.suggestShardSideQueueSize() to set the shard size if the user does not specify it as a parameter.--Closes -6857-
__label__adaptive add peer recovery status to the indices status- API exposing both on going and summary when recovering from a peer shard--
__label__perfective Tests: Improve test coverage.--Close -7428-
__label__perfective increase netty worker count to default to the- updated value netty defaults to--
__label__perfective [Test] make recovery slow down in- rerouteRecoveryTest aware of index size--
__label__perfective make test less evil--
__label__corrective tests repaired--
__label__perfective fields are protected--
__label__corrective "nullable problems: disable warnings on- ""complex"" getters/setters (IDEA-63958)--"
__label__corrective annotation default value parsing fixed--
__label__corrective cleanup (IDEA-90461)--
__label__corrective IDEA-70843 (fix Hector slider for GTK+ L&F)--
__label__corrective additional null check--
__label__corrective just one more DnDEnabler little fix :)--
__label__corrective add suggestions for literal expressions- (IDEA-57593)--
__label__corrective disable pattern configuration for the same- named packages (IDEA-151250)--
__label__corrective gradle: correctly set TestModuleProperties for- modules containing '-' in names (IDEA-151590)--
__label__perfective Replace instanceof template variable with- variable segment--
__label__adaptive Make is possible to enhance color schemes from- plugin in non-intellij environment (e.g. upsource)--
__label__perfective cleanup--
__label__perfective cleanup--
__label__corrective Memory leak fixed. Area instances connected to- project and module haven't been disposed at their disposal.--
__label__perfective Renaming preview files--
__label__perfective implement open hash addressing in index leaf- page to avoid large moves--
__label__perfective intellilang avoid costly service lookups--
__label__corrective IDEA-127075 IDE hang on file structure--
__label__corrective don't suggest 'convert to groovy-style property- access' inside closure--
__label__corrective IDEA-114890 Find Jar On The Web: Looking For- Libraries progress can't ve cancelled--
__label__corrective move statement should be enabled when moving to- the end of file--
__label__corrective NPE--
__label__perfective refactor name: it could be any RC--
__label__perfective diff: better name for default diff tool--
__label__perfective ui: use setter--
__label__corrective "IDEADEV-1678  IDEADEV-1685 Added icons count on- folders in thumbnails view  Added EditExternaly to editors actions--"
__label__corrective IDEADEV-20992--
__label__corrective fixed PY-2674 Assignment can be replaced with- augmented assignmet breaks context--
__label__corrective PY-1635 Extract Method in middle of expression- generates broken code--
__label__corrective move suppress/settings intention down- (IDEA-72320 )--
__label__perfective Typos--
__label__perfective FileNameCache: enable caching always don't- store common prefix (saves 8 entry bytes vs. less prefix average length)--
__label__corrective fixed django template commenter again (PY-1949)--
__label__corrective fix indefinite loop (IDEA-67750)--
__label__corrective StackOverflow fixed--
__label__perfective use common ExceptionUtil--
__label__corrective Fix for upsource--
__label__corrective IDEA-63381 we should find android module when- platform is specified--
__label__perfective formatting of injected code refactored - 3--
__label__corrective IDEA-94048 Maven run configuration - profiles- list gets randomly re-ordered after closing and opening project--
__label__corrective make find toolwindow work in dumb mode and- correctly navigate--
__label__perfective aware of not sourcemap file--
__label__perfective Don't offer to download source by maven for- artifact with 'system' scope--
__label__corrective WI-31168 Unable to save settings after upgrade- to 2016.1 (cherry picked from commit 5b98073)--
__label__perfective better messages format--
__label__perfective title changed--
__label__corrective IDEA-81004 Deadlock (SoftWrapApplianceManager)--Breaking potentially endless loop and report an error-
__label__corrective SVN: configure branches NPE--
__label__corrective "reorder instructions  maybe it'll fix strange- IMSE--"
__label__corrective TreeUi: NPE when in showCentered() no visible- rows in tree--
__label__corrective NPE fix--
__label__corrective fix--
__label__perfective Added code completion test.--
__label__adaptive fragments with differences in comments only are- considered equivalent--
__label__perfective optimization: determine token end as next token- start in PsiBuilder--
__label__adaptive "Ruby test runner: Statistcis can be sort by- ""Tests"" column--"
__label__adaptive diff: allow to highlight changes without border--
__label__corrective IDEA-78863 Live templates are not accessible in- read-only file (e.g. versioned in Perforce or TFS)--
__label__corrective fixed PY-12251 Project Interpreters: Create- virtualenv from settings doesn't update warnigns about python package- management tools--
__label__adaptive "report expressions like ""!b != c"" in ""Double- negation"" inspection and add test--"
__label__corrective correctly-sized icon in completion extender--
__label__perfective Check VFS sanity action--
__label__perfective code-dups cleanup--
__label__adaptive external system: add clickable link to log- folder to the project import failure message--
__label__corrective PY-16335 Preserve formatting of converted- collection literals--
__label__corrective FrameWrapper: do not restore frame state as- iconified (IDEA-87792)--
__label__adaptive added additional shortcut--
__label__perfective optimization: cache org.junit.Test--
__label__adaptive PY-996--
__label__corrective "IDEADEV-25382: idiotic ""...please recompile""- error message killed--"
__label__perfective editorPaintStart useless in our case--
__label__corrective resolve and completion for Django settings- (PY-563)--
__label__perfective Fixed typos in test.--
__label__perfective "SMTestRunner: Statistics tab  total column- caption improved--"
__label__corrective IDEA-80573 GitCheckoutOperation: sleep a bit to- let file watcher report all changes for small repositories where refresh is- too fast.--
__label__adaptive ChangeUtil-encode/decodeInformation for groovy--
__label__corrective fix navbar rebuild on popup invocation--
__label__corrective method return fix should not touch super method- formal parameters--
__label__corrective Maven: test fixed by removing unnecessary and- obsolete assertion--
__label__perfective one more test that fails; some more code moved- to common framework--
__label__corrective bad linking of Xerces messages--
__label__perfective [vcs-log] make BekLinearGraph testable--
__label__corrective IDEA-35738 Cannot drag around label with empty- text--
__label__adaptive plugins: tooltip for plugins with newer version- (IDEA-75998)--
__label__corrective XML rename dialog doesn't accept character '.'- or '-' (IDEADEV-35547)--
__label__corrective "JUnit UI redesign  part 4: ""rerun failed tests""- button moved to proper place--"
__label__adaptive remember committed changes splitter proportions- (IDEADEV-16784)--
__label__perfective Major changes in data structures.- Reimplementation & beautification.--
__label__corrective Fixed ipnb editor layout.--
__label__perfective "Cheaper ProgressManager.checkCanceled().- Mostly  it's call to abstract method eliminated.--"
__label__perfective Improved align behavior to align only- subsequent assignments or hashes--
__label__corrective preferred focused component (IDEA-60570)--
__label__corrective class kind calculation may produce INRE- (SCL-1349)--
__label__perfective javadoc--
__label__corrective "IDEA-139609 Gradle: New Module Wizard: ""Select- Gradle Projec""t dialog: selection is not confirmed by double-clicking or- pressing Enter--"
__label__corrective NPE--
__label__perfective Cleanup code--
__label__corrective Maven: escaping support in the resource- compiler (IDEADEV-35524)--
__label__adaptive form scope provider & dom lookups implemented--
__label__adaptive EP for upsource added--
__label__adaptive CPP-560 New Welcome Screen for CLion--
__label__adaptive support for forced compilation of a set of- files/modules--
__label__adaptive "added ""Overloaded varargs method"" inspection--"
__label__adaptive [vcs-log] IDEA-125276 support regular- expressions in branch filter--
__label__adaptive Mac laf: add support for search controls with- history popups--
__label__adaptive IDEADEV-11483 IE conditional comments support- [in progress]--
__label__adaptive symlink support in vfs & SOE protection--
__label__perfective "YARN-2635. TestRM  TestRMRestart - TestClientToAMTokens should run with both CS and FS. (Wei Yan and kasha via- kasha)--(cherry picked from commit 80d11eb68e60f88e16d7d41edecbddfc935a6b10)-"
__label__adaptive HDFS-2465. Add HDFS support for fadvise readahead- and drop-behind. Contributed by Todd Lipcon.--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-0.23@1190625 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective YARN-2132. ZKRMStateStore.ZKAction-runWithRetries- doesn't log the exception it encounters. (Vamsee Yarlagadda via kasha)--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-2@1601066 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective MAPREDUCE-2899. Replace major parts of- ApplicationSubmissionContext with a ContainerLaunchContext (Arun Murthy via- mahadev) - Merging r1170459 from trunk--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-0.23@1170460 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective YARN-2582. Fixed Log CLI and Web UI for showing- aggregated logs of LRS. Contributed Xuan Gong.--(cherry picked from commit e90718fa5a0e7c18592af61534668acebb9db51b)-
__label__corrective "YARN-2111. In FairScheduler.attemptScheduling  we- don't count containers as assigned if they have 0 memory but non-zero cores- (Sandy Ryza)--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-2@1605115 13f79535-47bb-0310-9956-ffa450edef68-"
__label__perfective "YARN-3587. Fix the javadoc of- DelegationTokenSecretManager in yarn  etc. projects. Contributed by Gabor- Liptak. (cherry picked from commit 7e543c27fa2881aa65967be384a6203bd5b2304f)--"
__label__adaptive MAPREDUCE-3121. NodeManager should handle- disk-failures (Ravi Gummadi via mahadev) - Merging r1208131 from trunk.--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-0.23@1208135 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective YARN-2821. Fixed a problem that DistributedShell AM- may hang if restarted. Contributed by Varun Vasudev (cherry picked from- commit 7438966586f1896ab3e8b067d47a4af28a894106)--
__label__adaptive YARN-1063. Augmented Hadoop common winutils to have- the ability to create containers as domain users. Contributed by Remus- Rusanu. Committed as a YARN patch even though all the code changes are in- common.--(cherry picked from commit 5ca97f1e60b8a7848f6eadd15f6c08ed390a8cda)-
__label__perfective HADOOP-6987. Use JUnit Rule to optionally fail test- cases that run more than 10 seconds.--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1005977 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective MAPREDUCE-3345. Fixed a race condition in- ResourceManager that was causing TestContainerManagerSecurity to fail- sometimes. Contributed by Hitesh Shah. svn merge -c r1199144- --ignore-ancestry ../../trunk/--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-0.23@1199145 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective YARN-632. Changed ContainerManager api to throw- IOException and YarnRemoteException. Contributed by Xuan Gong. svn merge- --ignore-ancestry -c 1479740 ../../trunk/--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-2@1479741 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive YARN-2830. Add backwords compatible- ContainerId.newInstance constructor. Contributed by Jonathan Eagles.--(cherry picked from commit 43cd07b408c6613d2c9aa89203cfa3110d830538)-
__label__perfective HADOOP-7057. IOUtils.readFully and- IOUtils.skipFully have typo in exception creation's message. Contributed by- Konstantin Boudnik.--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1040849 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective HADOOP-6133. Add a caching layer to- Configuration::getClassByName to alleviate a performance regression- introduced in a compatibility layer. Contributed by Todd Lipcon--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@812285 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive Merge r1503933 from trunk to branch-2 for YARN-513.- Create common proxy client for communicating with RM (Xuan Gong & Jian He via- bikas)--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-2@1503935 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive YARN-1757. NM Recovery. Auxiliary service support.- (Jason Lowe via kasha)--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-2@1585784 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective HADOOP-7223. FileContext createFlag combinations- are not clearly defined. Contributed by Suresh Srinivas.--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1092565 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective Merge -c 1529538 from trunk to branch-2 to fix- YARN-1090. Fixed CS UI to better reflect applications as non-schedulable and- not as pending. Contributed by Jian He.--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-2@1529539 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective YARN-1424. RMAppAttemptImpl should return the- DummyApplicationResourceUsageReport for all invalid accesses. (Ray Chiang via- kasha)--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-2@1601745 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective YARN-3583. Support of NodeLabel object instead of- plain String in YarnClient side. (Sunil G via wangda)--(cherry picked from commit 563eb1ad2ae848a23bbbf32ebfaf107e8fa14e87)-(cherry picked from commit b0d22b0c606fad6b4ab5443c0aed07c829b46726)-
__label__corrective HADOOP-7341. Fix options parsing in CommandFormat.- Contributed by Daryn Sharp.--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1132505 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective YARN-1910. Fixed a race condition in TestAMRMTokens- that causes the test to fail more often on Windows. Contributed by Xuan Gong.- svn merge --ignore-ancestry -c 1586192 ../../trunk/--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-2@1586193 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective YARN-1883. TestRMAdminService fails due to- inconsistent entries in UserGroups (Mit Desai via jeagles)--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-2@1582865 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive merge YARN-360 from trunk. Allow apps to- concurrently register tokens for renewal. Contributed by Daryn Sharp.--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-2@1442442 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective YARN-1185. Fixed FileSystemRMStateStore to not- leave partial files that prevent subsequent ResourceManager recovery.- Contributed by Omkar Vinit Joshi. svn merge --ignore-ancestry -c 1533803- ../../trunk/--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-2@1533805 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective YARN-3379. Fixed missing data in localityTable and- ResourceRequests table in RM WebUI. Contributed by Xuan Gong (cherry picked- from commit 4e886eb9cbd2dcb128bbfd17309c734083093a4c)--
__label__perfective "HADOOP-7034. Add TestPath tests to cover dot  dot- dot  and slash normalization. Contributed by Eli Collins--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1035142 13f79535-47bb-0310-9956-ffa450edef68-"
__label__perfective HADOOP-6367. Removes Access Token implementation- from common. Contributed by Kan Zhang.--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@881509 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective YARN-539. Addressed memory leak of LocalResource- objects NM when a resource localization fails. Contributed by Omkar Vinit- Joshi. svn merge --ignore-ancestry -c 1466756 ../../trunk/--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-2@1466757 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective YARN-3028. Better syntax for replaceLabelsOnNode in- RMAdmin CLI. Contributed by Rohith Sharmaks--(cherry picked from commit fd93e5387b554a78413bc0f14b729e58fea604ea)-
__label__corrective Merge r1580077 from trunk. YARN-1849. Fixed NPE in- ResourceTrackerService-registerNodeManager for UAM. Contributed by Karthik- Kambatla--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-2@1580078 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective MAPREDUCE-2766. Fixed NM to set secure permissions- for files and directories in distributed-cache. Contributed by Hitesh Shah.- svn merge -c r1195340 --ignore-ancestry ../../trunk/--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-0.23@1195341 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive YARN-254. Update fair scheduler web UI for- hierarchical queues. (sandyr via tucu)--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-2@1423743 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective YARN-2730. DefaultContainerExecutor runs only one- localizer at a time. Contributed by Siqi Li (cherry picked from commit- 6157ace5475fff8d2513fd3cd99134b532b0b406)--
__label__corrective "YARN-2122. In AllocationFileLoaderService  the- reloadThread should be created in init() and started in start(). (Robert- Kanter via kasha)--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-2@1601046 13f79535-47bb-0310-9956-ffa450edef68-"
__label__adaptive HADOOP-6534. Trim whitespace from directory lists- initializing LocalDirAllocator. Contributed by Todd Lipcon--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@909806 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive "Merge r1606407 from trunk. YARN-614. Changed- ResourceManager to not count disk failure  node loss and RM restart towards- app failures. Contributed by Xuan Gong--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-2@1606408 13f79535-47bb-0310-9956-ffa450edef68-"
__label__corrective HADOOP-6682. NetUtils:normalizeHostName does not- process hostnames starting with [a-f] correctly.--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@953929 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective YARN-3094. Reset timer for liveness monitors after- RM recovery. Contributed by Jun Gong (cherry picked from commit- 0af6a99a3fcfa4b47d3bcba5e5cc5fe7b312a152)--
__label__corrective HADOOP-6139. Fix the FsShell help messages for rm- and rmr.  Contributed by Jakob Homan--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@793098 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective YARN-2798. Fixed YarnClient to populate the renewer- correctly for Timeline delegation tokens. Contributed by Zhijie Shen.--(cherry picked from commit 71fbb474f531f60c5d908cf724f18f90dfd5fa9f)-
__label__corrective YARN-2269. Remove external links from YARN UI.- Contributed by Craig Welch--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-2@1609591 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive YARN-2059. Added admin ACLs support to Timeline- Server. Contributed by Zhijie Shen. svn merge --ignore-ancestry -c 1597207- ../../trunk/--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-2@1597208 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective HADOOP-6906.  FileContext copy() utility doesn't- work with recursive copying of directories. (vinod k v via mahadev)--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@987374 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective MAPREDUCE-2784. [Gridmix] Bug fixes in- ExecutionSummarizer and ResourceUsageMatcher. (amarrk)--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-0.23@1237579 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective HADOOP-6452 Hadoop JSP pages don't work under a- security manager--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@893490 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective HADOOP-6951.  Distinct minicluster services (e.g.- NN and JT) overwrite each other's service policies.  Contributed by Aaron T.- Myers.--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1002896 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective YARN-2819. NPE in ATS Timeline Domains when- upgrading from 2.4 to 2.6. Contributed by Zhijie Shen--(cherry picked from commit 4a114dd67aae83e5bb2d65470166de954acf36a2)-
__label__corrective YARN-596. Use scheduling policies throughout the- queue hierarchy to decide which containers to preempt (Wei Yan via Sandy- Ryza)--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-2@1598198 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective "HADOOP-6932.  Namenode start (init) fails because- of invalid kerberos key  even when security set to simple--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@991030 13f79535-47bb-0310-9956-ffa450edef68-"
__label__perfective YARN-1497. Fix comment and remove accidental- println--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-2@1567491 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive YARN-1635. Implemented a Leveldb based- ApplicationTimelineStore. Contributed by Billie Rinaldi. svn merge- --ignore-ancestry -c 1565868 ../../trunk/--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-2@1565869 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective "HDFS-2154. In TestDFSShell  use TEST_ROOT_DIR and- fix some deprecated warnings.--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1147184 13f79535-47bb-0310-9956-ffa450edef68-"
__label__corrective YARN-2705. Fixed bugs in ResourceManager node-label- manager that were causing test-failures: added a dummy in-memory- labels-manager. Contributed by Wangda Tan.--(cherry picked from commit e9c66e8fd2ccb658db2848e1ab911f1502de4de5)-
__label__corrective MAPREDUCE-2603. Disable High-Ram emulation in- system tests. (Vinay Kumar Thota via amarrk)--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1138301 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective YARN-2608. FairScheduler: Potential deadlocks in- loading alloc files and clock access. (Wei Yan via kasha)--(cherry picked from commit c9811af09a3d3f9f2f1b86fc9d6f2763d3225e44)-
__label__corrective YARN-3108. ApplicationHistoryServer doesn't process- -D arguments (Chang Li via jeagles)--(cherry picked from commit 30a8778c632c0f57cdd005080a470065a60756a8)-
__label__perfective HDFS-7144. Fix findbugs warnings in- RamDiskReplicaTracker. (Contributed by Tsz Wo Nicholas Sze)--Conflicts:-	hadoop-hdfs-project/hadoop-hdfs/CHANGES-HDFS-6581.txt-
__label__adaptive HADOOP-7110. Implement chmod with JNI. Contributed- by Todd Lipcon--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1063090 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective HADOOP-7187. Fix socket leak in GangliaContext. - Contributed by Uma Maheswara Rao G--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1085122 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive YARN-2502. Changed DistributedShell to support node- labels. Contributed by Wangda Tan (cherry picked from commit- f6b963fdfc517429149165e4bb6fb947be6e3c99)--
__label__corrective HDFS-2414. Fix TestDFSRollback to avoid spurious- failures. Contributed by Todd Lipcon.--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-0.23@1180540 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective HDFS-73. DFSOutputStream does not close all the- sockets. Contributed by Uma Maheswara Rao G--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1157232 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive HADOOP-7001.  Configuration changes can occur via- the Reconfigurable interface. (Patrick Kline via dhruba)--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1038480 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective MAPREDUCE-3238. Small cleanup in SchedulerApp.- (Todd Lipcon via mahadev) - Merging r1206921 from trunk--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-0.23@1206924 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective YARN-1555. Fixed test failures in- applicationhistoryservice.* (Vinod Kumar Vavilapalli via mayank) svn merge- --ignore-ancestry -c 1556753 ../YARN-321--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-2@1562207 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective YARN-3457. NPE when NodeManager.serviceInit fails- and stopRecoveryStore called. Contributed by Bibin A Chundatt.--(cherry picked from commit dd852f5b8c8fe9e52d15987605f36b5b60f02701)-
__label__corrective YARN-1718. Fix a couple isTerminals in Fair- Scheduler queue placement rules (Sandy Ryza)--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-2@1569929 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective HADOOP-6441. Protect web ui from cross site- scripting attacks (XSS) on the host http header and using encoded utf-7.- (omalley)--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@891132 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive HDFS-3167. CLI-based driver for MiniDFSCluster.- Contributed by Henry Robinson.--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-2@1308160 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective MAPREDUCE-2187. Reporter sends progress during- sort/merge. Contributed by Anupam Seth.--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1152964 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective "YARN-1913. With Fair Scheduler  cluster can logjam- when all resources are consumed by AMs (Wei Yan via Sandy Ryza)--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-2@1599401 13f79535-47bb-0310-9956-ffa450edef68-"
__label__adaptive YARN-3361. CapacityScheduler side changes to- support non-exclusive node labels. Contributed by Wangda Tan (cherry picked- from commit 0fefda645bca935b87b6bb8ca63e6f18340d59f5)--
__label__corrective svn merge -c 1371390 FIXES: YARN-14. Symlinks to- peer distributed cache files no longer work (Jason Lowe via bobby)--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-2@1371395 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective YARN-2065 AM cannot create new containers after- restart--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-2@1607440 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive YARN-45. Add protocol for schedulers to request- containers back from ApplicationMasters. Contributed by Carlo Curino and- Chris Douglas.--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-2@1479773 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective YARN-2958. Made RMStateStore not update the last- sequence number when updating the delegation token. Contributed by Varun- Saxena.--(cherry picked from commit 562a701945be3a672f9cb5a52cc6db2c1589ba2b)-
__label__perfective HDFS-1330 and HADOOP-6889. Added additional unit- tests. Contributed by John George.--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-0.23@1163464 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive HADOOP-7657. Add support for LZ4 compression.- Contributed by Binglin Chang.--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-0.23@1220312 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective YARN-3613. TestContainerManagerSecurity should init- and start Yarn cluster in setup instead of individual methods. (nijel via- kasha)--(cherry picked from commit fe0df596271340788095cb43a1944e19ac4c2cf7)-
__label__corrective YARN-1734. Fixed ResourceManager to update the- configurations when it transits from standby to active mode so as to- assimilate any changes that happened while it was in standby mode.- Contributed by Xuan Gong. svn merge --ignore-ancestry -c 1571539 ../../trunk/--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-2@1571540 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective Merge r1601491 from trunk. YARN-2030. Augmented- RMStateStore with state machine. Contributed by Binglin Chang--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-2@1601492 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive YARN-1936. Added security support for the Timeline- Client. Contributed by Zhijie Shen. svn merge --ignore-ancestry -c 1597153- ../../trunk/--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-2@1597154 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective svn merge -c 1420232 FIXES: YARN-266. RM and JHS- Web UIs are blank because AppsBlock is not escaping string properly.- Contributed by Ravi Prakash--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-2@1420233 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective HADOOP-6375. Sync documentation for FsShell du with- its implementation. Contributed by Todd Lipcon--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@883206 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective YARN-280. RM does not reject app submission with- invalid tokens (Daryn Sharp via tgraves)--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-2@1425085 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive HDFS-4733. Make HttpFS username pattern- configurable. Contributed by Alejandro Abdelnur.--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-2@1477241 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective YARN-3181. FairScheduler: Fix up outdated findbugs- issues. (kasha)--(cherry picked from commit c2b185def846f5577a130003a533b9c377b58fab)-
__label__corrective Merge -c 1235858 from trunk to branch-0.23 to fix- MAPREDUCE-3683. Fixed maxCapacity of queues to be product of parent- maxCapacities.--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-0.23@1235860 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective YARN-578. Fixed NM to use SecureIOUtils for reading- and aggregating logs. Contributed by Omkar Vinit Joshi. svn merge- --ignore-ancestry -c 1487672 ../../trunk/--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-2@1487686 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective HDFS-1480. All replicas of a block can end up on- the same rack when some datanodes are decommissioning. Contributed by Todd- Lipcon.--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1160897 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective YARN-2331. Distinguish shutdown during supervision- vs. shutdown for rolling upgrade. Contributed by Jason Lowe--(cherry picked from commit 088156de43abb07bec590a3fcd1a5af2feb02cd2)-
__label__corrective MAPREDUCE-3392. Fixed Cluster's- getDelegationToken's API to return null when there isn't a supported token.- Contributed by John George. svn merge -c r1200484 --ignore-ancestry- ../../trunk/--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-0.23@1200485 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective YARN-2519. Credential Provider related unit tests- failed on Windows. Contributed by Xiaoyu Yao.--(cherry picked from commit cbea1b10efd871d04c648af18449dc724685db74)-
__label__corrective YARN-295. Fixed a race condition in ResourceManager- RMAppAttempt state machine. Contributed by Mayank Bansal. svn merge- --ignore-ancestry -c 1501856 ../../trunk/--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-2@1501857 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive HADOOP-6583. Captures authentication and- authorization metrics. Contributed by Devaraj Das.--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@915095 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective svn merge -c 1379565 FIXES: YARN-66. aggregated- logs permissions not set properly (tgraves via bobby)--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-2@1379567 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective YARN-1920. Fixed- TestFileSystemApplicationHistoryStore failure on windows. Contributed by- Vinod Kumar Vavilapalli. svn merge --ignore-ancestry -c 1586414 ../../trunk/--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-2@1586420 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective YARN-2740. Fix NodeLabelsManager to properly handle- node label modifications when distributed node label configuration enabled.- (Naganarasimha G R via wangda)--(cherry picked from commit db1b674b50ddecf2774f4092d677c412722bdcb1)-
__label__adaptive HADOOP-2398. Additional instrumentation for- NameNode and RPC server. Add support for accessing instrumentation statistics- via JMX. (Sanjay radia via dhruba)--git-svn-id: https://svn.apache.org/repos/asf/lucene/hadoop/trunk/src/contrib/hbase@611906 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive "HADOOP-6148. Implement a fast  pure Java CRC32- calculator which outperforms java.util.zip.CRC32.  Contributed by Todd Lipcon- and Scott Carey--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@794944 13f79535-47bb-0310-9956-ffa450edef68-"
__label__adaptive YARN-2493. Added node-labels page on RM web UI.- Contributed by Wangda Tan (cherry picked from commit- b7442bf92eb6e1ae64a0f9644ffc2eee4597aad5)--
__label__adaptive YARN-1936. Added security support for the Timeline- Client. Contributed by Zhijie Shen. svn merge --ignore-ancestry -c 1597153- ../../trunk/--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-2@1597154 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective HADOOP-7353. Cleanup FsShell and prevent masking of- RTE stack traces. Contributed by Daryn Sharp.--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1132764 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive YARN-3100. Made YARN authorization pluggable.- Contributed by Jian He.--(cherry picked from commit 23bf6c72071782e3fd5a628e21495d6b974c7a9e)-
__label__perfective YARN-2158. Improved assertion messages of- TestRMWebServicesAppsModification. Contributed by Varun Vasudev. svn merge- --ignore-ancestry -c 1608667 ../../trunk/--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-2@1608668 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective YARN-1608. LinuxContainerExecutor has a few DEBUG- messages at INFO level (kasha)--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-2@1558875 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive YARN-3853. Add docker container runtime support to- LinuxContainterExecutor. Contributed by Sidharta Seethana.--(cherry picked from commit 3e6fce91a471b4a5099de109582e7c6417e8a822)--Conflicts:-	hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LinuxContainerExecutor.java-
__label__adaptive YARN-975. Added a file-system implementation for- HistoryStorage. Contributed by Zhijie Shen. svn merge --ignore-ancestry -c- 1556727 ../YARN-321--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-2@1562184 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective YARN-2768 Improved Yarn Registry service record- structure (stevel)--
__label__perfective HDFS-2500. Avoid file system operations in- BPOfferService thread while processing deletes. Contributed by Todd Lipcon.--git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-0.23@1190072 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective BZ-1025874: fixing incremental update of kjars--
__label__corrective -Added fixes for waltz to run waltz50--git-svn-id: https://svn.jboss.org/repos/labs/labs/jbossrules/trunk@7071 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-
__label__adaptive "JBRULES-340 core implementation for 'from' -The- from node is now added -ReteooBuilder is added  but not unit tested.--git-svn-id: https://svn.jboss.org/repos/labs/labs/jbossrules/trunk@5713 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-"
__label__corrective JBRULES-393 Xml dump with illegal characters -fixed- by Javier Prieto--git-svn-id: https://svn.jboss.org/repos/labs/labs/jbossrules/trunk@5949 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-
__label__perfective BZ-986000 - DRL-to-RuleModel marshalling- improvements--
__label__corrective JBRULES-2339: JBRULES-2440: fixing ruleflow group- management--git-svn-id: https://svn.jboss.org/repos/labs/labs/jbossrules/trunk@32725 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-
__label__adaptive JBRULES-527: adding primitive support to alpha- hashing code--git-svn-id: https://svn.jboss.org/repos/labs/labs/jbossrules/trunk@7150 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-
__label__perfective JBRULES-1520: moving test to correct test file--git-svn-id: https://svn.jboss.org/repos/labs/labs/jbossrules/trunk@19375 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-
__label__corrective "JBRULES-3343 Property Specific -Added fix for- byPassModifyToLeftTupleSink  which was not working for LIANodes--"
__label__perfective [DROOLS-820] reuse PomModel if already available--
__label__corrective "-fixed compilation issues  due to incorrect use of- PropagationContextImpl constructor.--git-svn-id: https://svn.jboss.org/repos/labs/labs/jbossrules/trunk@19847 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-"
__label__corrective JBRULES-130--git-svn-id: https://svn.jboss.org/repos/labs/trunk/labs/jbossrules@3283 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-
__label__perfective Removed unncessary else if check; replaced with- else--git-svn-id: https://svn.jboss.org/repos/labs/labs/jbossrules/trunk@26039 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-
__label__corrective JBRULES-1618 Check the context class-loader of the- current thread before using it--
__label__perfective "- adding new test for issue related with IF and- pattern ordering  throwing a NotSupportedOperationException--"
__label__corrective [DROOLS-601] fix queries when used in combination- with agenda-groups--
__label__corrective [BZ-1042867] fix ProjectClassLoader when running in- osgi--
__label__perfective more test coverage for nesting of OR CEs--git-svn-id: https://svn.jboss.org/repos/labs/labs/jbossrules/trunk@4586 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-
__label__corrective JBRULES-1590: fixing problem with shadow proxy- cloning for collections--git-svn-id: https://svn.jboss.org/repos/labs/labs/jbossrules/trunk@19783 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-
__label__perfective refactoring--git-svn-id: https://svn.jboss.org/repos/labs/trunk/labs/jbossrules@2301 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-
__label__corrective JBRULES-3170 Compiler erroneously resolves the- package of declared classes with the same name as basic classes--
__label__corrective JBRULES-1805: fixing multithread bug--git-svn-id: https://svn.jboss.org/repos/labs/labs/jbossrules/trunk@23501 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-
__label__perfective [DROOLS-1026] improve equals/hashCode performances- for all rete nodes--
__label__perfective "-removed @ignore for passing test  updated to- central test helper methods--"
__label__corrective [DROOLS-812] properly close InputStreams--
__label__perfective JBRULES-976: fixing problems with collections- clonning and adding unit tests--git-svn-id: https://svn.jboss.org/repos/labs/labs/jbossrules/trunk@13162 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-
__label__corrective JBRULES-2121: JavaDialect isn't creating unique ids-  - fixed name that is checked--git-svn-id: https://svn.jboss.org/repos/labs/labs/jbossrules/trunk@26929 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-
__label__corrective  BZ-1044973 - Guided rule editor does not let the- user to set objects as a parameters for method calls that have objects super- type as a parameter--
__label__corrective JBRULES-659: fixing the problem of multidimentional- arrays--git-svn-id: https://svn.jboss.org/repos/labs/labs/jbossrules/trunk@9457 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-
__label__adaptive [DROOLS-991] allow to configure maxEventsInMemory- in FileLogger--
__label__corrective Fixing NPE--git-svn-id: https://svn.jboss.org/repos/labs/labs/jbossrules/trunk@6187 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-
__label__corrective " - fixed an issue where a comment in a work item- definition file results in a null work item definition object  filtering out- null now--git-svn-id: https://svn.jboss.org/repos/labs/labs/jbossrules/trunk@26933 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-"
__label__corrective [DROOLS-128] fix retriving of global entry set from- a Stateless session--
__label__corrective JBRULES-527: fixing compilation problems--git-svn-id: https://svn.jboss.org/repos/labs/labs/jbossrules/trunk@6992 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-
__label__perfective remove support of deprecated brl files--
__label__corrective Changes to resolve issues discovered in integration- tests--git-svn-id: https://svn.jboss.org/repos/labs/trunk/labs/jbossrules@3441 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-
__label__adaptive [BZ-1092084] raise a compilation error when the- same attribute is defined twice on a rule--
__label__adaptive -now works with non DroolsObjectInputStream- serialization.--git-svn-id: https://svn.jboss.org/repos/labs/labs/jbossrules/trunk@13207 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-
__label__corrective -fixed MVEL parser context naming issue.--git-svn-id: https://svn.jboss.org/repos/labs/labs/jbossrules/trunk@23995 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-
__label__corrective JBRULES-1736 Dynamically generated Types -Must get- classloader from the rulebase root classloader now--git-svn-id: https://svn.jboss.org/repos/labs/labs/jbossrules/trunk@21573 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-
__label__perfective [JBRULES-3668] format and shorten kproject.xml file--
__label__adaptive JBRULES-2439--git-svn-id: https://svn.jboss.org/repos/labs/labs/jbossrules/trunk@31842 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-
__label__perfective "JBRULES-498 Optimised HashMap implementations- -Changed ReteooWorkingMemory modifyObject to do a retract+assert.  Its also- now  doing  the same as Leaps  so we can move the modifyObject  method to- AbstractWorkingMemory.--git-svn-id: https://svn.jboss.org/repos/labs/labs/jbossrules/trunk@6642 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-"
__label__perfective [DROOLS-198] avoid useless cleanup of staged- activations in phreak--
__label__corrective -Make TupleSourceTest work--git-svn-id: https://svn.jboss.org/repos/labs/trunk/labs/jbossrules@2284 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-
__label__adaptive JBRULES-233 for leaps--git-svn-id: https://svn.jboss.org/repos/labs/labs/jbossrules/trunk@4214 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-
__label__perfective JBRULES-2835: use new Environment constant--
__label__perfective JBRULES-2353: Update HumanTask to the new grid inf- and CommandExecutor 	- fix unsupported setError methods--git-svn-id: https://svn.jboss.org/repos/labs/labs/jbossrules/trunk@30808 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-
__label__corrective [DROOLS-336] avoid to share a LeftInputAdapterNode- if it has 2 sinks with different property reactive masks--
__label__corrective - throw exception if no user transaction was found--
__label__perfective  - reducing error level to warn to avoid- unnecessary warnings when session id cannot be found--
__label__corrective -Few fixes to manners--git-svn-id: https://svn.jboss.org/repos/labs/trunk/labs/jbossrules@2061 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-
__label__perfective JBRULES-2817 Make the KnowledgeAgent Tests more- robust and faster--git-svn-id: https://svn.jboss.org/repos/labs/labs/jbossrules/trunk@36213 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-
__label__corrective Fixing test--git-svn-id: https://svn.jboss.org/repos/labs/labs/jbossrules/trunk@20387 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-
__label__corrective JBRULES-737: fixing problem when inspecting classes- with static initializers--git-svn-id: https://svn.jboss.org/repos/labs/labs/jbossrules/trunk@10190 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-
__label__corrective [DROOLS-740] fix jitting of constraint with strings- concatenation--
__label__corrective [DROOLS-818] register declared listeners on- StatelessKieSession--
__label__adaptive "[DROOLS-383] support for switch over String-- * Eclipse compiler has a least known documented configuration-   property ""org.eclipse.jdt.core.compiler.compliance"" which-   needs to be set along with the 'org.eclipse.jdt.core.compiler.source'-   and 'org.eclipse.jdt.core.compiler.codegen.targetPlatform' properties.-- * this is going to work only when the underlaying JVM is 7+-"
__label__corrective JBRULES-1820 Exception: Input stream is not- explicitly closed.--git-svn-id: https://svn.jboss.org/repos/labs/labs/jbossrules/trunk@36154 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-
__label__corrective "JBRULES-2849 workaround bug in JDK 5 concerning- alternatives in lookbehind assertions  using alternatives of lookbehind- assertions rather than a lookbehind assertion with alternatives.--"
__label__corrective "JBPM-3814  BZ 1002724 Bugfixes with regards to- concurrency (cherry picked from commit- 2bf24d6908c1976fca356b2e96279355e863db5a)--- Changed EnvironmentImpl to use a concurrent HashMap-- The most significant persistence changes are in the JpaPersistenceContextManager class-- Reverted locking changes to the SingleSessionCommandService since a fix for JBPM-3814 is not-  possible at the level of the SSCS in the form of locking (because of the app-scoped entity-  manager).-- Also deleted unsused interfaces (ApplicationScopedPersistenceContext  TransactionablePersistentContext)-"
__label__corrective -testRemovePackage now works.--git-svn-id: https://svn.jboss.org/repos/labs/labs/jbossrules/trunk@7100 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-
__label__adaptive "JBRULES-2537 JSon Marshaller -Added JSon marshaller- using xstream  with unit tests.--git-svn-id: https://svn.jboss.org/repos/labs/labs/jbossrules/trunk@33359 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-"
__label__corrective fix failing tests--
__label__corrective JBRULES-1102 Bug in DefaultBetaConstraint class- indexing to never turn on -Fixed DefaultBetaConstraints -Added comprehensive- unit test--git-svn-id: https://svn.jboss.org/repos/labs/labs/jbossrules/trunk@14396 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-
__label__adaptive BZ743283: Decision tables should support timer- column instead of deprecated duration attribute--
__label__corrective [BZ-1007977] when returning a cached KieModule from- the KieRepository referring to a snapshot release check if there is a newer- release on the maven repository--
__label__corrective JBRULES-85--git-svn-id: https://svn.jboss.org/repos/labs/trunk/labs/jbossrules@3162 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-
__label__corrective BZ-1039639 - GRE doesn't recognize MVEL inline- lists when opening rule--
__label__perfective JBRULES-1498 Thead safe partitioning of- WorkingMemory entry points--git-svn-id: https://svn.jboss.org/repos/labs/labs/jbossrules/trunk@18794 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-
__label__perfective Added ScannerChangeSetTest which scans CSV resource- file for changes.--
__label__corrective fix incremental compilation when updating a- kiemodule without changing the release id (for snaphots)--
__label__corrective BZ-1006481 - UI support for 'extends' rule keyword- broken--
__label__corrective JBRULES-2375: fixing deadlock on queued actions--git-svn-id: https://svn.jboss.org/repos/labs/labs/jbossrules/trunk@33500 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-
__label__corrective JBRULES-1268 Activation.remove() is removing the- WRONG activation when used in events -the queue is set to null after dequeue--git-svn-id: https://svn.jboss.org/repos/labs/labs/jbossrules/trunk@15781 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-
__label__corrective JBRULES-3126 NPE when retracting an object with a- collection field which has been accumulated on--
__label__corrective [DROOLS-94] fix BaseObjectClassFieldReader when- reading numeric values--
__label__corrective JBRULES-1906: NPE when LiteralRestriction value is- set to null--git-svn-id: https://svn.jboss.org/repos/labs/labs/jbossrules/trunk@24509 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-
__label__corrective fixing reflection constructor to use int instead of- long for ksessionId--
__label__corrective BZ975922 - GRE constraint operator list box- problems when re-opening file--
__label__corrective [BZ-980385] fix comparison of 2 timer nodes--
__label__perfective -update unit tests for LeftInputAdapterNode--git-svn-id: https://svn.jboss.org/repos/labs/trunk/labs/jbossrules@2283 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-
__label__corrective BZ-1074672: Fixing legacy API to properly handle- resource configuration. (cherry picked from commit- 645d0e5cb86225a898391960350588d1817b1de2)--
__label__corrective "Fix OutOfBoundException on- MemoryFileSystem.existsFile("""")--"
__label__corrective [DROOLS-839] fix LogicTransformer with Accumulate--
__label__corrective JBRULES-447 - small fix for rule attributes--git-svn-id: https://svn.jboss.org/repos/labs/labs/jbossrules/trunk@6003 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-
__label__corrective fix test using using no longer existing- ConsequenceException.getRule() method--
__label__corrective [DROOLS-293] fix ObjectTypeNode id creation and- comparison--
__label__perfective JBRULES-2817 Make the KnowledgeAgent Tests more- robust and faster 	- KAgent Event Listener test are enabled again! There- were modified to adopt the new KAgent test architecture--
__label__perfective [BZ-1200383] when a dependency cannot be found log- the complete stack trace only in debug mode--
__label__corrective "really  this is the fix for -154--git-svn-id: https://svn.jboss.org/repos/labs/labs/jbossrules/trunk@3914 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-"
__label__corrective [JBRULES-3263] fix jitted contraints when invoking- an interface--
__label__corrective "DROOLS-515 Kie-Camel is broken after Camel Update- -Added static field  to allow unit tests to ensure keys are ordered.--"
__label__corrective fix WELD problem caused by having a beans.xml in- drools-compiler--
__label__adaptive JBRULES-446 Support rulebase configuration via- jsr94 registerRuleExecutionSet properties--git-svn-id: https://svn.jboss.org/repos/labs/labs/jbossrules/trunk@13123 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-
__label__corrective "Fixed bug with ""disconnected"" factHandles- (JBRULES-3187) and added a test to verify that I fixed the bug!!--"
__label__corrective [DROOLS-37] fix jitting of comparison contraints- (cherry picked from commit 5ea47c020451949cc52708494afdfa50799467a2)--
__label__adaptive JBRULES-2934 Add NewRegisterWorkItemHandlerCommand- to CommandFactory with unit test--
__label__adaptive JBRULES-527: adding primitive support for hashcode- calculation on indexing--git-svn-id: https://svn.jboss.org/repos/labs/labs/jbossrules/trunk@7155 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-
__label__corrective [DROOLS-121] detect circular dependencies for- declared types--
__label__perfective refactor GAV to ReleaseId--
__label__adaptive JBRULES-3714 Add capability to configure- date-effective/date-expires for SpreadSheet--
__label__adaptive JBRULES-313: adding fire limit option--git-svn-id: https://svn.jboss.org/repos/labs/labs/jbossrules/trunk@12927 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-
__label__adaptive JBRULES-1641: ForEach node  - initial core- implementation of a for each node JBRULES-1551: Workflow human tasks  - human- task node with swimlane integration--git-svn-id: https://svn.jboss.org/repos/labs/labs/jbossrules/trunk@20429 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-
__label__adaptive JBRULES-1730: Add support for other data types when- writing processes to XML  - pluggable data types support--git-svn-id: https://svn.jboss.org/repos/labs/labs/jbossrules/trunk@21496 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-
__label__adaptive Added Analysis Result as HTML--git-svn-id: https://svn.jboss.org/repos/labs/labs/jbossrules/trunk@15004 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-
__label__adaptive add support for maven version ranges--
__label__adaptive JBRULES-313: adding halt command--git-svn-id: https://svn.jboss.org/repos/labs/labs/jbossrules/trunk@12902 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-
__label__adaptive allow to specify an optional Environment when- creating a new KieSession--
__label__adaptive "JBRULES-3200 Support for dynamic typing (aka- ""traits"")--"
__label__adaptive Implementing support to incremental updates on- kcontainers--
__label__adaptive JBRULES-527: adding primitive support to indexing--git-svn-id: https://svn.jboss.org/repos/labs/labs/jbossrules/trunk@7158 c60d74c8-e8f6-0310-9e8f-d4a2fc68ab70-
__label__adaptive [DROOLS-389] Improve support for @Traitable POJOs- and @Trait interfaces--
__label__adaptive [DROOLS-114] Support Defeasible rules--
__label__perfective move test output to one level down--for ReadClassDataTest and CompileJavaAgainstKotlinTest-
__label__adaptive Introduce RenderingContext and add as parameter- to DiagnosticParameterRenderer-render--RenderingContext holds data about the whole diagnostics allowing to adjust rendering of its parameters-
__label__perfective Extracted error messages from- DefaultDiagnosticRenderer to special DefaultErrorMessages class.--
__label__perfective Merge two JetTypeMapper-mapToCallableMethod- methods--
__label__perfective Base class for multi-file tests extracted--
__label__corrective Fixed KT-1797 No completion for nested class name- in extension function definition-- -KT-1797 Fixed-
__label__corrective Extract Function: Make member/top-level function- private by default--
__label__adaptive Type annotations supported in Java elements--Reflection-related implementations are pending-
__label__corrective Fix for the code to compile--
__label__corrective fix tests after recent refactoring--
__label__perfective Optimize search of package part files for- JetPositionManager--
__label__corrective "Avoid wrapping AssertionError over and over- again  see KT-7501--"
__label__perfective "Refactoring: TypeInfoFactory.createTypeInfo()- without type -> noTypeInfo()  getNotNullType -> getTypeNotNull  nullability- refined  style fixes--"
__label__corrective JS: fix rhino 64k issue--
__label__corrective Test data paths fixed--
__label__corrective Change Signature: Do not fail on unresolved- PsiMethod  -KT-9535 Fixed--
__label__perfective Added some new test for java8--
__label__corrective Standard library is imported properly rather than- enclosing the user code--
__label__perfective add test for private-to-this visibility in traits--
__label__perfective Add test for lookups to classifier members--
__label__corrective J2K: correct conversion of nested class- references-- -KT-5294 Fixed- -KT-5400 Fixed-
__label__perfective Minor: additional logging when failing to read- file in VirtualFileKotlinClass--
__label__perfective Add WITH_RUNTIME and WITH_REFLECT directives to- box tests--Currently all tests in boxWithStdlib/ run with both runtime and reflection-included; eventually they'll be merged into box/ using these directives-
__label__corrective Escaping keywords used as identifiers in- DescriptorRenderer.-- -KT-2810 fixed-
__label__adaptive Constraint incorporation--In a constraint system a new bound is incorporated:-all new constrains that can be derived from it-(and from existing ones) are added-
__label__perfective Unused method removed--
__label__perfective Drop JetClassObject element and its usages--as class objects are now represented by JetObjectDeclaration element-
__label__adaptive js enumerable for ecma5--
__label__perfective Tests for match--
__label__adaptive 'hasSyntaxErrors' check moved from Diagnostic to- PositioningStrategy--This makes possible to mark diagnostic errors when syntax error are present (by overriding isValid in PositioningStrategy subclasses).-
__label__perfective "Minor  move boxAgainstJava logic to a separate- test class--"
__label__adaptive Reflection support--
__label__adaptive Try keyword--
__label__corrective Introduce Variable: Forbid extraction from class- initializer (aside of its body)  -KT-8329 Fixed--
__label__corrective Reporting real source file paths from K2JS- compiler--
__label__corrective KT-737 compareTo() intrinsic--
__label__perfective Lazy receiver parameter descriptor: to avoid- eager computation of default types--
__label__perfective Config refactoring.--
__label__perfective Debug output removed--
__label__perfective rename JetTypeMapper constants--
__label__perfective "Split ProtoBuf.Callable to three messages:- constructor  function  property--Serialize both at the moment  will drop the old one after bootstrap-"
__label__corrective Custom equals operator (includes little patch to- frontend)---KT-2354 fixed-
__label__perfective More usages of asKtScope() removed--
__label__perfective better root ns--
__label__perfective "Removed doTest(char)  since it was erroneous.--If lookupString and tailText are both null  completionChar is ignored.-"
__label__perfective Rendering nice unicode arrow for function types- in UI.--
__label__corrective Fix for EA-39487--
__label__perfective Invert if condition intention - smaller- availability range + refactored--
__label__perfective Replaced AddReturnTypeFix with- SpecifyTypeExplicitlyAction for properties.--
__label__perfective Refactoring of- AnnotationResolver.resolveAnnotation(s)Arguments--
__label__perfective "reformat code  optimize imports--"
__label__perfective WithDeferredResolve removed (it was never used)--
__label__perfective Refactored reference provider logic.--
__label__perfective wrongly added test removed (correct one was added- before by Zhenja)--
__label__corrective Prohibit Array<Nothing>--
__label__perfective One more test added--
__label__perfective "Minor  make ModuleDescriptor public in injectors--It's much more convenient to call injector.getModule() than-injector.getResolveSession().getModuleDescriptor()-"
__label__perfective rename--
__label__perfective abstract + data and sealed + data are also- deprecated--
__label__perfective Cleanup--
__label__corrective Fixed highlighting for enum and object names in- code-- -KT-8134 Fixed-
__label__adaptive [KT-4124] Add support for simple nested classes--
__label__perfective Remove unused method--
__label__corrective "Exception fix: diagnose an error for a generic- type which is a subtype of itself  a set of tests -EA-64453 Fixed--"
__label__adaptive Initial implementation of KT-6427 Completion to- use Java name suggestion to complete function parameters (+ filtered out- synthetic Kotlin classes from completion)--
__label__corrective KT-1808 Auto import offers private static Java- classes  -KT-1808 fixed--
__label__perfective reimplemented extension literal definition and- calls to comply with jquery conventions--
__label__corrective Extract Function: Fix signature update on dialog- opening--
__label__corrective do not mark error type  if the expression is- resolved to namespace  (EXPRESSION_EXPECTED_NAMESPACE_FOUND error)--
__label__adaptive Show warning on usages of javaClass<T>() in- annotations loaded from Java--
__label__adaptive tuple literals--
__label__corrective Fix breakpoints in inline functions in libraries--
__label__corrective Fixed EA-70945--
__label__corrective "Fix for KT-9897: Cannot pop operand off an empty- stack"" with -= on ArrayList element--  -KT-9897 Fixed-"
__label__corrective "KT-8968 Special completion after ""super.""-- -KT-8968 Fixed-"
__label__perfective Base class for surrounders for statements--
__label__perfective refactoring--
__label__perfective Constructor body generation extracted as a method- (+ migrated to Printer for convenience)--
__label__corrective Control-Flow Analysis: Fix bug in finally-block- repetition in the presence of non-local returns  -EA-65982 Fixed--
__label__adaptive "Decompiler: Introduce DeserializerForDecompiler--Component which can ""resolve"" descriptors without project-It builds dummy descriptors for dependencies which are enough to build decompiled text-"
__label__adaptive Support for checking loaded descriptors agains an- expected txt file--
__label__corrective Fix KT-10472: compare all overloads including- varargs in a single pass.--
__label__perfective Formatting--
__label__perfective Abstract Lazy test for gianostics--
__label__perfective Method cache for ClassDescriptorSerializer--
__label__perfective Minor refactor--
__label__corrective "Extract Function: Consider reference ""broken"" if- corresponding diagnostics are changed after code fragment extraction - -KT-8633 Fixed--"
__label__adaptive Supported propagation for subclass of- j.u.Collection and similar classes.--
__label__adaptive Create from usage: Create constructor parameter- by reference in delegation specifier  -KT-6601 Fixed--
__label__perfective Removed unused methods from KtScope.--
__label__adaptive Introduce Variable: Support extraction of string- template fragments  -KT-2089 Fixed--
__label__perfective Implemented better rendering for parameters with- default values in decompiler and descriptor renderer.-- -KT-1582 fixed-
__label__corrective KT-3639 Can't find sources of AbstractIterator- when navigating from stack strace-- -	 fixed-
__label__perfective "Deprecate and don't write KotlinClass$Kind  to be- removed later--"
__label__perfective Smart completion: code improvements and- refactorings after code review--
__label__corrective Lazy resolve: Package-level objects are handled- properly--
__label__perfective Get rid of obsolete syntax in quickfixes changing- lambda's signature--- Do not wrap parameters with '()'-- Do not set return type for them-- Fix existing testData-
__label__perfective refactored generation of static initializer--
__label__corrective "fix KT-9299 In a project with circular- dependencies between modules  IDE reports error on use of internal class from- another module  but the corresponding code still compiles and runs.---KT-9299 Fixed-"
__label__corrective Fix header scope for secondary constructors--Add companion object's scope and nested classes-- -KT-6996 fixed-
__label__corrective Prevent lazy types to be accidentally computed in- debug--
__label__perfective " - Adjusted build.properties so that default values- work directly.  - Refactored the usage of parameter lists by using a new- ParameterList (implementing List<Parameter>) and adding helper methods.  -- Form now derives from ParameterList.  - ConnectorCall.getRequestHeaders() and- getResponseHeaders() now return a ParameterList  other helper methods- removed.  - Added urlEncode() on Parameter.  - Reference now sets new scheme- names in lower case to respect normalization rules.  - Added more unit tests- for the Resltet API; Contributed by Lars Heuer.  - Fixed bug in Jetty 5 HTTPS- connector preventing the usage of the specified SSL keystore in certain- cases. Found by Dave Pawson.  - Added constructors to DefaultServer using the- protocol's default port  - Updated Jetty 6 to version beta 17.  - Fixed type- in JdbcClient sample XML document. Reported by Thierry Boileau.  - Added new- FileRepresentation constructor accepting a File instance.  - Improved- ByteUtils.write() methods for streams by automatically buffering output- streams if necessary.  - Templatized AbstractChainlet. Contributed by Lars- Heuer.  - Fixed AbstractRestlet which was not reporting the proper error when- non standard Method instances were called but not handled.  - Added FILE- protocol to Protocols enumeration.  - Added- com.noelios.restlet.data.FileReference.  - Added ReferenceList to handle- ""text/uri-list"" representations.  - Renamed Resource.getVariantsMetadata() to- getVariants() for simplification purpose.  - Added Resource.getIdentifier() :- Reference method.  - Renamed com.noelios.restlet.impl.HttpServerCallImpl to- HttpServerCall.  - Renamed ""initParameters"" into ""properties"" for Component- interface and related classes.  - Refactored the methods allowing the- attachment of connectors in Component interface and related classes.  -- Removed ""name"" property from Connector and Component interfaces and related- classes.  - Added modifiable ""properties"" map to the Connector interface.  -- Added FileClient implementing a client connector for the FILE protocol - allowing standard access to local file systems.  - Added- ServerCall.getRequestInput() method to factorize common logic among HTTP- server connectors.  - Added ClientCall.getResponseOutput() method to- factorize common logic among HTTP and FILE connectors.  - Moved- StringUtils.normalizePath() method to FileReference.--"
__label__perfective " - Renamed the ""org.restlet.ssl.hostnameVerifier""- attribute into just ""hostnameVerifier"" for consistency with existing naming.--"
__label__corrective "Fixed ""not found"" status for Options requests.--"
__label__perfective " - All core representation classes have been moved- from the ""org.restlet.resource"" package into a new- ""org.restlet.representation"" package. Make sure to adjust your import- instructions.--"
__label__corrective Fixed ZipClientHelper test case.--
__label__corrective Fixed generation of cache directives in the- cache-control header.--
__label__adaptive " - Refactored the JdbcClient to return XML result- sets (using a new RowSetRepresentation class). In addition  the    XML- request can now contain several SQL statements to be executed as a batch.- Contributed by Thierry Boileau.--"
__label__corrective  - Simple HTTP connector works again--
__label__perfective  - Cleaned code to remove Eclipse 3.4 warnings and- errors.--
__label__perfective  - Moved SIP test cases to test module--
__label__corrective "JAX-RS extension: - added to changes.txt  that I- switched to API 0.11 - fixed a big bug related to the determining of the- MessageBodyWriter - using org.restlet.data.Conditions.getStatus() for- javax.ws.rs.core.Request.evaluatePreconditions() instead of using an own- implementation (the Restlet method has a bug  I'm waiting for the patch to be- applied) - fixed a bug in JaxRsUriBuilder.buildFromMap*() - returning status- 500 instead of 406  if no message body writer could be found (according to a- change in the specification)--"
__label__corrective  - Fixed unit test due to random Java method- introspection order--
__label__perfective         - The Request-isConfidential() method has- been refactored to           be supported by Message and Response as well.- The method           Request-setConfidential() has been removed (back to- Restlet           1.0 state). Added Protocol-isConfidential() method to- support           the new implementation which rely on Request-getProtocol().-           Reported by Kevin Conaway.--
__label__perfective  - Renamed DirectoryResource into- DirectoryServerResource to match its new super class name.--
__label__corrective "Fix issue -853--DefaultSslContextFactory would ignore enabledCipherSuites unless you also specified enabledProtocols  due to a copy-paste error.-"
__label__perfective  - Upgraded Simple server to version 4.1.2.- Contributed by Niall Gallagher.--
__label__corrective Fixed regression. Reported by Guido Schmidt--
__label__corrective  - Fixed NIO client blocking due to reuse attempt- of a busy connection--
__label__perfective  - Added Metadate-getParent() method.  - Added- better Variant-toString() implementation.--
__label__adaptive JAX-RS extension continued: - Added an- ObjectFactory to the JAX-RS extension for customized root resource class and- provider instantiation. Contributed by Bruno Dumon.--
__label__perfective  - More optimizations for internal connectors.--
__label__corrective Fixed bug--
__label__corrective "       - When updating a file via the FILE- connector  some deletion          issue could occur on Windows due to JVM- integration issues          with the OS. A workaround to reduce this was to- invoke the          garbage collection. Reported by Kevin Conaway.--"
__label__adaptive  - Continued SIP transaction support--
__label__corrective  - Fixed connection closing regression--
__label__perfective Removed Representation-getDigester* methods. There- is no reason to favor this way to wrap a Representation.--
__label__perfective  - Initial code for enhanced internal HTTP- connectors.--
__label__corrective Fixed bug in DomRepresentation causing the loss of- both public and system DocType. Reported by Lee Saferite.--
__label__adaptive  - Initial code for new default HTTP connector and- SIP connector.--
__label__corrective Fixed content negotiation issue in the servlet- extension.--
__label__adaptive  - Continued NIO connector--
__label__perfective Compute logged duration only if needed.--
__label__adaptive Added support of the Authentication-Info header.--
__label__corrective  - Fixed bugs--
__label__perfective       - Renamed Representation-write(Appendable) to- append(Appendable).--
__label__corrective  - Fixed issue with HTTP client connector not- correctly reporting connection and other IO errors.--
__label__perfective Fixed javadocs.--
__label__adaptive Added support of the dataservices extension in- Android.--
__label__perfective         - Refactored WADL extension based on John- Logsdon feed-back.           Add convenience methods and constructors on- MethodInfo and           RepresentationInfo. Removed unecessary methods on   -        WadlResource like getRepresentationInfo(Variant) and          - getParametersInfo(RequestInfo|ResponseInfo|Representation-           Info).--
__label__perfective JAX-RS-Extension: - added javadoc to util methods.--
__label__corrective "JAX-RS extension - Issue 800 (an NPE): I've checked- all methods with the name  and all possible points for NPE should be defanged- now--"
__label__perfective  - Updated Jetty to version 6.1.15--
__label__corrective  - Fixed issues in Grizzly code.--
__label__corrective  - Fixed bug causing unit tests to fail--
__label__adaptive Added parsing of RDF XML.--
__label__adaptive JAX-RS-Extension: - encoding of UriBuilder- parameters implemented--
__label__perfective  - Bumped versions to 1.0 RC3  - Updated docs  -- Removed deprecated methods--
__label__perfective  - Minor refactoring in RDF extension.--
__label__adaptive Added support of Ranges.--
__label__corrective  - Disabled failing test cases (temp)--
__label__corrective  - The ServletContextAdapter passed by the- ServerServlet to the Restlet's Application was    not given to the- constructor but via the setContext() method. Reported by Tammy Croteau.--
__label__adaptive  - Initial code for new default HTTP connector and- SIP connector.--
__label__adaptive  - Reference now verifies the validity of- characters before setting them. Suggested by Stephan Koops.--
__label__adaptive Add SpringRouter-style supplemental direct routing- via the attachments property.  This allows for multiple routes for the same- bean or routes which would be illegal/unmatched as bean names.--
__label__adaptive Add support for template route matching mode--
__label__perfective  - Improved exception handling on createResource().--
__label__corrective Fixed potential NPE when the product name is null.- Reported by Vincent Ricard.--
__label__perfective Removed debug traces.--
__label__perfective  - Deprecated ServletConverter and added an- equivalent    ServletAdapter class to prevent confusion with the  - ConverterService reintroduced in Restlet 1.2.  - Added root Helper class.--
__label__adaptive JAX-RS extension continued: - @FormParam is now- supported--
__label__corrective       - The simplified logging formatter (one line)- is now available only in         the Java SE edition as it could cause- troubles with Java EE container         and potentially GAE/Android as we- reconfigure the default log manager         programmatically. Reported by- Kristoffer Gronowski and Bo Xing.--
__label__corrective  - Fixed plugin descriptors for some extensions.--
__label__corrective Fixed code generation for the GAE edition.--
__label__adaptive Completed implementation of apispark extension.--
__label__corrective " - Some unit test were catching exceptions - preventing JUnit from failing the tests.--"
__label__adaptive  - Initial code for new default HTTP connector and- SIP connector.--
__label__adaptive  - Initial code for new default HTTP connector.--
__label__corrective        - Fixed HTTPS issues in internal connector.--
__label__perfective Removed unnecessary instruction.--
__label__corrective  - Fixed filling state bug in Buffer class  -- Removed received inbound message from messages queue when fully received  -- Connection closing seems to work again  - CouchDBUpload test working again--
__label__corrective Fixed internal client connector.--
__label__corrective Fixed test case.--
__label__perfective "Add comments describing methods (from HTTP  Webdav- RFC).--"
__label__corrective        - The CLAP connector didn't set the- expiration date based on          its 'timeToLive' parameter. Reported by- Peter Becker.--
__label__adaptive Introducing a new Directory constructor with a- LocalReference instance.--
__label__adaptive Allowed custom parsing of Atom documents.--
__label__corrective "Fixed issue -649  if needed  add base64 padding- characters to encoded md5 hash before decoding. Reported and contributed by- Andy Dennie.--"
__label__adaptive  - Initial code for new default HTTP connector and- SIP connector.--
__label__corrective Indexed directories were not properly handled with- the CLAP protocol. Reported by Rob Heittman.--
__label__corrective Fixed potential infinite loops while reading- headers (issues -599 and -656). Reported by weiweiwang.--
__label__corrective  - Fixed potential NPE in ReferenceList--
__label__adaptive  - Continued SIP transaction support--
__label__adaptive " - Continued support for non-blocking HTTPS to the- internal NIO connectors  client-side and server-side.--"
__label__corrective Fixed NPE in the dataservices extension due to bad- parsing of referential constraints.--
__label__corrective prevented primitive type from being returned as- models in API Declarations (https://github.com/restlet/apispark/issues/1168)--
__label__perfective EvaluatePrecondition* to Request* renamed--
__label__perfective "        - Updated Jetty to version 7.0 RC4.- Upgraded the Jetty           extension: replaced ""headerBufferSize"" parameter- by           ""requestHeaderSize"" and ""responseHeaderSize"" parameters.        -   Removed ""lowThreads"" parameter no longer available.--"
__label__corrective  - Fixed latest issues. Submitted by Thierry- Boileau.--
__label__perfective 1.0 beta 9 (not released yet)  - Merged Restlet and- UniformInterface interfaces into a single Restlet interface for- simplification purpose.  - Moved connectors handling from OriginServer upto- Component as other components like Proxies need them.  - Renamed UniformCall- and related methods into RestletCall.  - Renamed RestletCall.getHandler*()- methods into getRestlet*().  - Updated Jetty 6 to version 6.0 beta 14.  -- Fixed issue with ServletCall.getRequestUri returning a trailing '?'. Reported- by Yuri de Wit.  - Renamed NRE implementation classes HandlerTarget and- HandlerMapping to RestletTarget and RestletMapping.  - Added a new extension- to NRE to support Apache Commons FileUpload to facilitate the processing of- multipart forms. Suggested by Yuri de Wit.  - Removed RestletContainer and- RestletServer interfaces.  - Renamed DefaultRestletContainer and- DefautRestletServer to RestletContainer and RestletServer for simplification- purpose.  - The parent of all Restlets is now a simple Component and not- necessarily a RestletContainer.  - Factory and Manager were refactored for- clarification and simplification purpose.  - Added getInitParameters() to- Component to allow external code to pass init params in a standard way (for- example a main method or the ServerServlet).--
__label__perfective  - Additional WADL refactorings.--
__label__corrective Fixed potential NPE.--
__label__perfective Added warning message when no client connector- supports the request's protocol.--
__label__corrective Fixed range issue -607.--
__label__corrective         - Fixed bug in XstreamRepresentation- failing to use the DOM           XML driver. Reported by Florian Georg.--
__label__corrective Fixed issue 210 : a Language tag is composed of a- list of subtags--
__label__perfective Updated Ranges test case.--
__label__adaptive ServerResource now supports empty POST and PUT- requests.--
__label__perfective  - Fixed Message-release() Javadocs.--
__label__perfective Updated to Scripturian 1.0RC3--
__label__corrective        - Fixed selector exhaustion issue with- Grizzly connector.          Reported by Bruce Lee.--
__label__corrective         - Fixed error in Conditions.getStatus()- sometimes returning           304 for methods other than HEAD and GET.- Contributed by           Stephan Koops.--
__label__adaptive UPDATE ADD now possible with subdocuments fields--
__label__corrective Fixed issue with inner class and Object Database- interface--
__label__perfective Huge refactoring on GraphDB: - changed class- names in vertex and edge - Optimized memory consumption by removing nested- records - Optimized speed in ORecord.equals() and hashCode(): now avoid field- checks (experimental)--
__label__corrective Fixed bug on oidentifable but not odocument- fetching--
__label__perfective Unneeded index flush was removed--
__label__corrective "fixed collection fields in query results  issue - -3212--"
__label__adaptive Patch by Luca Molino about the management of JSON- with document type not only as first attribute--
__label__corrective Fixed issue 684 about strict mode--
__label__adaptive Implemented issue 109:- http://code.google.com/p/orient/issues/detail?id=109 About in-memory clusters- inside regular persistent databases.--
__label__corrective Issue 762 was fixed.--
__label__corrective DbDeleteTest is made more stable.--
__label__corrective Fixed a bug on browsing clusters in transaction- as issue https://github.com/tinkerpop/blueprints/issues/312--
__label__corrective Issue -1604. Remote bag. Fix save notification.--
__label__perfective Created 2 new test case with creation of vertexes- and edges in not default clusters--
__label__adaptive Profiler: - all the metrics now have a- description and a type - supported new HTTP REST command /profiler/metadata- to retrieve all the metadata--
__label__corrective Fixed issue 156 about deep inheritance--
__label__adaptive Drop database implemented and tested against- local and remote db--
__label__corrective "Issue -2900  OFlatDatabase was removed.--"
__label__corrective Fixed issue on delete when the database is not- yet opened--
__label__adaptive "Support for not-logget Transactions by setting- OTransaction.setUsingLog(false). Default is true  so full compatibility is- guaranteed--"
__label__adaptive Issue -71:- http://code.google.com/p/orient/issues/detail?id=71 Working in progress--
__label__adaptive "Supported new syntax in SQL UPDATE to use a inner- query as target. Example: update ( traverse V.in  E.out from V ) set date =- sysdate() where out.size() > 1--"
__label__corrective Fixed issue on browsing of entire cluster/class--
__label__corrective Fix by Andrey on marshalling/unmarshalling of- embedded documents--
__label__perfective Improved performance by handling begin and end of- offsets in cluster data.--
__label__corrective Fixed issue -255 about hooks: wasn't called- during TX - added new test cases - check of recursive call for the same- record in hook.--
__label__perfective Removed old code to handle temporary records in- indexes--
__label__corrective Fixed issue 1198: NullPointerException in- OCommandExecutorSQLResultsetAbstract.assignTarget--
__label__corrective fixes -1980: permissions follow role's- inheritance--
__label__corrective Fixed bug on database drop in Maven Tests--
__label__perfective Renamed threads to a more understandable ones--
__label__adaptive implementing math operations--
__label__perfective Cleanup inspection warnings--
__label__perfective Improved automatic backup management of errors--
__label__corrective Fixed issue 800 closing the socket on timeout--
__label__corrective Fixed problem with remote connection to- distributed storage--
__label__adaptive "GraphDB: supported 3 locking modes: no locking - database level locking (default) and record level locking--"
__label__corrective Fixed bug on management of indexes with the- introducing of new ODistributedStorage--
__label__corrective Fixed issue -1521 about JSON management of- embedded lists with different types--
__label__perfective Console: fixed jdk6 problem in more elegant way- (thanks to Andrey's suggestion)--
__label__perfective removed not useful system out from test cases.--
__label__perfective "Minor: fixed javadoc  put a variable as final - managed no return in OPLA/execute block--"
__label__adaptive implemented integration of globla property with- binary serialization--
__label__corrective Fixed some errors in remote calls.--
__label__corrective fixed bug on shutdown--
__label__adaptive Started support for server-side triggers--
__label__corrective Fixed problem of ConcurrentModificationException- reported by Bayoda: the problem should be due to a wrong isolation on Map in- cache: used exclusive lock even for keys() and get().--
__label__adaptive "Changed syntax for ""create class"" command. Now- wants the keyword ""CLUSTER"" and also accepts cluster names--"
__label__perfective Renamed everywhere OTreeMap in OMVRBTree as the- new name of the algorithm: OMVRBTree--
__label__corrective "Fixed issue 110 about HTTP/REST invocation of- ""command"" parameter passing a SELECT statement--"
__label__adaptive Further work or traverse: - supported new- OSQLPredicate to specify a predicate using SQL language--
__label__perfective Minor: fix warning--
__label__perfective Huge refactoring on GraphDB: - changed class- names in vertex and edge - Optimized memory consumption by removing nested- records - Optimized speed in ORecord.equals() and hashCode(): now avoid field- checks (experimental)--
__label__corrective fixed minor issue with thread local management--
__label__corrective Working to fix corrupted data in sockets--
__label__perfective Minor optimization in RidBag--
__label__perfective Changed log level to debug--
__label__corrective Removed checks if db is open as a bug reported in- the ML by Stefan Ollinger--
__label__perfective Improved memory usage and optimized general speed--
__label__corrective Fixed bugs on index where internal records were- not deleted--
__label__corrective Fixed issue on empty links--
__label__adaptive OPLA: supported invocation of Java static methods--
__label__corrective Fixed issues with sharing. Added also first test- case on sharding--
__label__corrective last attempt of fixing test failing on ci.--
__label__corrective Distributed: fixed issue -2008 on deploying- database--
__label__corrective "Fixed a bug in concurrency: - adaptive lock can- be configured by OGlobalConfiguration - Created new- OGlobalConfiguration.ENVIRONMENT_CONCURRENT for this purpose -- OSharedResourceAdaptiveLinked class has no sense to exists anymore: removed -- segments don't lock the storage anymore but has own lock. This could be- removed but it will tested for a while - update and delete record operations- lock the storage in exclusive mode  but probably this can be optimized in the- next future ---"
__label__corrective Fixed issue about out*() functions--
__label__perfective Minor: removed some warnings--
__label__corrective Fixed issue -3741--
__label__corrective Fixed issue -2472 about null values in Lists--
__label__corrective Index in tx: Fixed issue 468 about deletion--
__label__perfective Issue -1607 WAL page change tracking was- reimplemented.--
__label__corrective Released 0.9.8 with the fix on partitioning in- Key/Value Server--
__label__corrective OOM  reported by NMSWorks was fixed.--
__label__adaptive Issue -1404 Write cache speed improvements.--
__label__corrective Fixed issue on set password for OUser.--
__label__adaptive Issue 161: added the support for custom strategy- on creation of records- http://code.google.com/p/orient/wiki/Security-Customize_on_creation--
__label__corrective "Fixed issue about parenthesis in SQL query  added- one more test to the suite for it--"
__label__adaptive Fixed issue -1445 providing the new TIMEOUT in- most of the commands--
__label__corrective Fixed problem with LET and context variables--
__label__adaptive Implemented new commands: - truncate cluster -- truncate class--
__label__corrective Fixed bug using SQL projection against Object- Database interface. Now returns always documents instead of POJOs when the- ODocument has no class associated.--
__label__adaptive Implemented self-repair in case the security is- broken. This new method in the ODatabaseListener interface will allow to- handle corruptions in better way.--Console now displays a message and after a user input fix it. Cool!-
__label__corrective Fixed issue reported by Steven about TX- congruency with nested records. The bug was reported in rollback.--
__label__adaptive HTTP static content now supports single file as- configuration--
__label__perfective removed nasty warnings in compilation--
__label__perfective Improved management of distributed cluster nodes--
__label__perfective Improved import/export tools--
__label__corrective fixed cluster id selection in distributed mode.--
__label__corrective Fix failed WAL test.--
__label__corrective Fix by Andrey to get working test cases even on- Linux (Windows seems to eat anything)--
__label__corrective Fix by Luca Molino on schema and in-thread db--
__label__corrective fix for use of different serializer by the db- compare--
__label__corrective Working to fix corrupted data in sockets--
__label__corrective Fixed problem with linkeset modified right after- query in remote configuration--
__label__perfective Issue -1404 WAL durability test improvements.--
__label__adaptive first implementation of binary record serializer- debug info. issue -4027--
__label__perfective Minor improvement on collection remove--
__label__corrective Fix by Luca Molino to close issue 619--
__label__perfective Improved auto-recognize of type in JSON reader--
__label__corrective Issue -1607 Fix blueprints tests and TX NPEs.--
__label__corrective Fixed issue on missed saving of the configuration- when Local Data has multiple files. Reported by Ed Barbeau:- http://groups.google.com/group/orient-database/msg/0299391834b65b73--
__label__adaptive CAMEL-5906: Added new camel-servletlistener- component for bootstrapping Camel in web app without using spring etc. Work- in progress.--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@1428278 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective Minor cleanup--git-svn-id: https://svn.apache.org/repos/asf/activemq/camel/trunk@712728 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive CAMEL-3014 camel-josql should have SQL language- META-INF which can be found automatically by camel-core--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@980675 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective MR-187: Added more unit tests.--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@824320 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective CAMEL-1712 Upgraded the camel-ibatis to JUnit4--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@785119 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective CAMEL-1842 Added OSGi integration test for- camel-mail and camel-cxf--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@795813 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive CAMEL-870: Added transferExchange option to- camel-jms.--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@756685 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective Added unit tests based on the mailing list- question--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@1224673 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective CAMEL-2445 applied patch with thanks to Stan and- Jeff--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@906342 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective CAMEL-541: Removed a bad tangle in camel spi. Not- this package has no tangles.--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@748992 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective CAMEL-1369: Removed @MessageDriven as its- replaced with @Consume.--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@749562 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective improved the camel-bam module to handle- concurrent processing better & dealing with JDBC/JPA exceptions if concurrent- updates to the same process occur at the same time; also added more better- tests--git-svn-id: https://svn.apache.org/repos/asf/activemq/camel/trunk@563909 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective CAMEL-751 Get the CamelContext ErrorHandler to- work--git-svn-id: https://svn.apache.org/repos/asf/activemq/camel/trunk@679345 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive CAMEL-1198: Ant path matcher now also possible- with camel-ftp.--git-svn-id: https://svn.apache.org/repos/asf/activemq/camel/trunk@730753 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive "CAMEL-4077: Sanitiy check route in XML DSL  that- there is input and outputs in routes.--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@1134300 13f79535-47bb-0310-9956-ffa450edef68-"
__label__corrective Fix test error reported by TeamCity--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@739402 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective Updaed the mail component so that mail headers- are correctly copied over from message to message.  This highlighted the fact- that th TO: should always be what is specified on the outbound endpoint- instead of the To: in the message. Added a test the validates headers are- preserved.--git-svn-id: https://svn.apache.org/repos/asf/activemq/camel/trunk@537937 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive CAMEL-6053: Allow to override blueprint config- admin placeholders from unit test.--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@1443931 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective corrected typo.--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@1331967 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive added fix for- https://issues.apache.org/activemq/browse/CAMEL-347 to enable JUEL to invoke- methods in expressions--git-svn-id: https://svn.apache.org/repos/asf/activemq/camel/trunk@631503 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive "CAMEL-1338: Added basic operator support for- simple language - end users is confused its not working  and nice to have- core support for basic operators. Added ?method=methodname for the bean- langauge so its in line with the bean component.--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@744707 13f79535-47bb-0310-9956-ffa450edef68-"
__label__adaptive CAMEL-5370: Added direct-vm component to act as- synchronous direct calls between multiple camel contexts in the same JVM (eg- like direct + vm together). Can be used to support transactions spanning- multiple camel contextes / bundles.--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@1350591 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective CAMEL-3203: Fixed adding routes with quartz- endpoints to already started camel should add jobs to scheduler.--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@1005489 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective CAMEL-1461: JMSProducer only sets JMSReplyTo if- exchange is out capable. Fixed a NPE.--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@757693 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective CAMEL-2339: Scheduled consumer now log- java.lang.Error at FATAL level before rethrowing--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@896858 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective CAMEL-2930 clean up the codes for wiki--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@962786 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive CAMEL-1099: Added FileIdempotentRepositry--git-svn-id: https://svn.apache.org/repos/asf/activemq/camel/trunk@723291 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective CAMEL-1370 caching the StreamSource by caching- the inputStream or reader--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@746872 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective Removed the System.out.print line from RunMojo--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@758544 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective Fixed test--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@962779 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective Fix compile error--git-svn-id: https://svn.apache.org/repos/asf/activemq/camel/trunk@707028 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective [CAMEL-1510] BatchProcessor interrupt has side- effects (submitted on behalf of Christopher Hunt)--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@765686 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive CAMEL-2919: Debugger API--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@961615 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective CAMEL-4244 Add ThreadPoolProfileBuilder and- change ThreadPoolFactory to use the ThreadPoolProfile--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@1159342 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective CAMEL-3879 Applied patch of DanK with thanks--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@1099050 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective CAMEL-2470: Adding test for sending back a reply- to JMSReplyTo based on a temporary queue.--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@949117 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective CAMEL-751 fixed the spring configuration url- error--git-svn-id: https://svn.apache.org/repos/asf/activemq/camel/trunk@679379 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective Fixed tests.--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@1062115 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective Added unit test for mistyped URI--git-svn-id: https://svn.apache.org/repos/asf/activemq/camel/trunk@640963 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective MailConsumer and MailProducer now use the- endpoint reference from its super class and doesn'n manager its own instance- variable--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@1054815 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective CAMEL-2011: JmsEndpoint is now singleton.--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@814584 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective CAMEL-6013 fixed the issue that  Validator- component fails on XSD with indirect relative import--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@1438352 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective CAMEL-656: Polished dataset and timer component.- Added @deprecation to not used method. Removed unused imports.--git-svn-id: https://svn.apache.org/repos/asf/activemq/camel/trunk@712497 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective CAMEL-3447: Camel uses same media size names as- Java Printer API. Thanks to Torsten for patch.--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@1051120 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective Set the isCreateCamelContextPerClass on tests- that can pass with it to speed up the tests--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@1152396 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective removed the generics from the Process interface- so that it must take an Exchange parameter to avoid ClassCastException when- sending any old Exchange into an Endpoint<FooExchange>--git-svn-id: https://svn.apache.org/repos/asf/activemq/camel/trunk@534145 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective Added another test--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@921999 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective CAMEL-3788 Merged the patch into camel-http4--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@1083724 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive CAMEL-3689: AdviceWith can now manipulate routes.- This allows you for example to replace parts of routes during testing.--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@1072545 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive "further improvements for CAMEL-133  a client can- now create an exchange on an endpoint specifying the ExchangePattern it wants- to use for an Exchange via Endpoint.createExchange(pattern)--git-svn-id: https://svn.apache.org/repos/asf/activemq/camel/trunk@572625 13f79535-47bb-0310-9956-ffa450edef68-"
__label__perfective resource class refactoring; introducing a- reusable base class for sub-resources - also added a new RoutesResource to- simplify the root resource further--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@745556 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective minor tidy up of test case--git-svn-id: https://svn.apache.org/repos/asf/activemq/camel/trunk@654441 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive CAMEL-1320: Created gzip data format--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@756039 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective CAMEL-3114: Fixed rss component bug with uri- encoding.--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@998608 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive CAMEL-2206: Added new Sampler EIP. Thanks to- Stephen Gargan for the contribution.--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@883614 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective Fixed test on other boxes--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@904741 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective Removed the printStackTrace line in the- CxfWsdlFirstTest--git-svn-id: https://svn.apache.org/repos/asf/activemq/camel/trunk@665997 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive "added contains() method to the DSL for- .header(""foo"").contains(""cheese"") for multi-value headers--git-svn-id: https://svn.apache.org/repos/asf/activemq/camel/trunk@539516 13f79535-47bb-0310-9956-ffa450edef68-"
__label__corrective CAMEL-1977: Http based components should filter- out camel internal headers.--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@814567 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive CAMEL-1789 Let the Camel Route support to lookup- the service which is exported from the OSGi bundle--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@792398 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive CAMEL-4023 Properties to Cxf ClientProxyFactory- can be set on endpoint uri or CxfEndpoint bean.--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@1128561 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective Removed the System out from the GenericFile--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@752424 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective Fixed compiler issue on JDK 1.5--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@1056650 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective Fixed tests using released version.--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@991460 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective CAMEL-1933: Overhaul of JMX. Added managed send- to.Prepared for camel/route context runtime configuration to be managed.--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@808777 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective Fix for MulticastStreamCachingTest after- interceptor changes--git-svn-id: https://svn.apache.org/repos/asf/activemq/camel/trunk@658260 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective Fixed unit test having problem on Windows- deleting files for cleanup.--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@888416 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective fixed test case which was failing sometimes on- linux--git-svn-id: https://svn.apache.org/repos/asf/activemq/camel/trunk@576445 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective CAMEL-2636 Fixed the issue of IOException: Bad- file descriptor--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@934852 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective CAMEL-2325: Removed not needed code.--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@895568 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective CAMEL-1255: Fixed missing classes in .jar - osgi- export stuff--git-svn-id: https://svn.apache.org/repos/asf/activemq/camel/trunk@734408 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective Checkstyle--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@1228067 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective CAMEL-4071 clean up the camel OSGi integration- test and load the karaf spring feature first--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@1133394 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective CAMEL-3796 Polish the- CxfRsProducerAddressOverrideTest--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@1084067 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective added explicit generics to avoid possible- compiler wierdness in the DSL like we had yesterday where the compiler- decided to use Object rather than ProcessorType in some DSL expressions--git-svn-id: https://svn.apache.org/repos/asf/activemq/camel/trunk@585089 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive CAMEL-1004 - added a ServiceStatus property to- most Service implementations - and exposed the status of a route--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@748071 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective Removed the System.out.println of the test--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@1206115 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective CAMEL-4059: Fixed test on windows--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@1132659 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive CAMEL-2970: JmsProducer supports non blocking- async routing engine for InOut Exchanges (request-reply over JMS).--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@978995 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective Fixed test on other boxes.--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@933097 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective Polish the unit test of JmsMessageBindTest--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@1023715 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective CAMEL-2180: Do not use copy of exchange when- processing in doCatch.--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@881175 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective Camel fails if onCompletion has been mis- configured from Java DSL.--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@1040143 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective CAMEL-2510 Fixed the issue of Mixing jetty/http- in a route screws up the URI used by HttpClient--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@917529 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective CAMEL-939 - Fix csv test that fails on slower- machines sometimes.--git-svn-id: https://svn.apache.org/repos/asf/activemq/camel/trunk@700232 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective CAMEL-1665 fixed the unit test error--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@781238 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective Fixed unit test. Doh what a mistake--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@887104 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective CAMEL-3240 Fixed camel-core build error.--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@1058911 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective CAMEL-2795: Fixed tests--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@952909 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective CAMEL-4176: Fixed fallback to use http4 or http4s- for proxy scheme when configured as property on CamelContext properties.--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@1144310 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive allow the installed languages to be browsed- restfully for CAMEL-1355--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@752938 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective polished--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@1209457 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective [CAMEL-1289] HeaderFilterStrategy - move from- Component to Endpoint (for JHC component)--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@743889 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective CAMEL-6048: camel-xmljson fixed issue so- attrbiutes with name type can be serialized. Thanks to Arne M Stroksen for- the patch.--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@1443634 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive CAMEL-845: added firedtime property.--git-svn-id: https://svn.apache.org/repos/asf/activemq/camel/trunk@688957 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive CAMEL-1933: Overhaul of JMX. Routes can now be- started/stopped.--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@808328 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective CAMEL-1091 - Fix compilation issue on Java 1.5--git-svn-id: https://svn.apache.org/repos/asf/activemq/camel/trunk@718279 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective CAMEL-1078.  Fix potential NPE.--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@788149 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective CAMEL-1134 make the ZipDataFormat Stream friendly--git-svn-id: https://svn.apache.org/repos/asf/activemq/camel/trunk@722005 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective tidied up some of the default JMS configurations;- for more detail see http://cwiki.apache.org/CAMEL/jms.html--git-svn-id: https://svn.apache.org/repos/asf/activemq/camel/trunk@545124 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective Polished code--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@812510 13f79535-47bb-0310-9956-ffa450edef68-
__label__perfective Added some logs for debuging--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@757865 13f79535-47bb-0310-9956-ffa450edef68-
__label__corrective Fixed test--git-svn-id: https://svn.apache.org/repos/asf/camel/trunk@1407748 13f79535-47bb-0310-9956-ffa450edef68-
__label__adaptive "Add a ResourceResolver implementation for WebJars--Prior to this commit  WebJars users needed to use versioned links within-templates for WebJars resources  such as `/jquery/1.2.0/jquery.js`.-This can be rather cumbersome when updating libraries - all references-in templates need to be updated.--One could use version-less links in templates  but needed to add a-specific MVC Handler that uses webjars.org's webjar-locator library.-While this approach makes maintaing templates easier  this makes HTTP-caching strategies less optimal.--This commit adds a new WebJarsResourceResolver that search for resources-located in WebJar locations. This ResourceResolver is automatically-registered if the ""org.webjars:webjars-locator"" dependency is present.--Registering WebJars resource handling can be done like this:--```java-@Override-protected void addResourceHandlers(ResourceHandlerRegistry registry) {-  registry.addResourceHandler(""/webjars/**"")-          .addResourceLocations(""classpath:META-INF/resources/webjars"")-          .resourceChain(true)-              .addResolver(new WebJarsResourceResolver());-}-```--Issue: SPR-12323--polish-"
__label__adaptive "Add ability to customize message channels--@EnableWebSocketMessageBroker message channel configuration can now be-customized via WebSocketMessageBrokerConfigurer. It is necessary to-make this easy and even required as part of the basic configuration-since by default the message channels are backed by a thread pool of-size 1  not suitable for production use.--Issue: SPR-11023-"
__label__perfective polishing--
__label__adaptive MockHttpServletResponse supports multiple- includes (SPR-	)--
__label__adaptive JSR-223 based StandardScriptFactory (including- <lang:std> support)--This commit also completes 4.2 schema variants in spring-context.--Issue: SPR-5215-
__label__perfective Adapted getXmlAsSource implementation to avoid- compilation failure in IntelliJ IDEA--
__label__adaptive @Resource injection points support @Lazy as well--Issue: SPR-	-
__label__adaptive DataBinder tries ConversionService if- PropertyEditor could not produce required type--Issue: SPR-13042-
__label__adaptive "Introduce ""dummy"" Environment implementation--For testing purposes in which an Environment implementation is required-but a ConfigurableEnvironment is not desirable.--All methods are no-ops and return null  therefore NPEs are likely.-"
__label__adaptive SPR-	 - Allow XStreamMarshaller subclasses to- customise XStream object--
__label__perfective made ConversionExecutor internal; removed other- unused operations from public SPI--
__label__perfective javadoc--
__label__corrective Only register Date converters with global format--Change JodaTimeFormatterRegistrar and DateFormatterRegistrar to only-register converters for the Date and Calendar types when a global format-has been defined. This means that the ObjectToObject converter will-handle String->Date conversion using the deprecated Date(String)-constructor (as was the case with Spring 3.1).--Issue: SPR-	-
__label__perfective Polish JavaDoc--
__label__adaptive "added public ""validateDatabaseSchema"" method to- Hibernate LocalSessionFactoryBean (SPR-	)--"
__label__perfective Polish Javadoc for PropertySource implementations--
__label__adaptive "SPR-8454 Introduce Registration style objects - rename several Spring MVC *Configurer helpers to *Registry  add more tests--"
__label__adaptive ResponseEntity's HeadersBuilder allows for- specifying existing HttpHeaders--Issue: SPR-12324-
__label__corrective SPR-5802 - NullPointerException when using- @CookieValue annotation--
__label__adaptive New method to return string representation of- typeDescriptor--
__label__perfective Polish AbstractHandlerMethodMapping--Issue: SPR-11541-
__label__adaptive SPR-7305 -- o.s.http.client.SimpleClientHttpRequestFactory does not allow to specify a- java.net.Proxy--
__label__corrective Add timeout async request handling to OSIV- components--This change adds async web request timeout handling to OSIV filters-and interceptors to ensure the session or entity manager is released.--Issue: SPR-10874-
__label__corrective "Allow file locations for resource handling--Prior to this change  location checks for serving resources would append-`/` to the location path it didn't already have one.--This commit makes sure not to append a `/` if the provided location is-actually a file.--Issue: SPR-12747-"
__label__corrective Shutdown Reactor env when relay handler is- stopped--The Reactor Environment (that's used by the TcpClient) manages a-number of threads. To ensure that these threads are cleaned up-Environment.shutdown() must be called when the Environment is no-longer needed.-
__label__adaptive Allow binary messages in StompSubProtocolHandler--Issue: SPR-12301-
__label__corrective DataSourceUtils lets timeout exceptions through- even for setReadOnly calls (revised; SPR-7226)--
__label__perfective Polishing--
__label__adaptive "added ""boolean isRegisteredWithDestination()""- method (SPR-7065)--"
__label__corrective getAllInterfacesForClass introspects parent- interfaces as well (SPR-7247)--
__label__corrective Fixed setFavorPathExtension delegation code--
__label__adaptive Allow configuring custom ThreadPoolTaskExecutor--Issue: SPR-12272-
__label__perfective Clean up spring-webmvc-portlet tests warnings--Clean up compiler warnings in the tests of spring-webmvc-portlet. This-commit adds type parameters to all the types (mostly `List` and `Map`).--After this commit the only warnings in spring-web left are the-subclasses of `MyCommandProvidingFormController`.-
__label__perfective Refactor from deprecated GenericTypeResolver- calls--Refactor AbstractMessageConverterMethodArgumentResolver and-BridgeMethodResolver to use ResolvableType in preference to deprecated-GenericTypeResolver calls.--Issue: SPR-10980-
__label__perfective Inlined AntPathStringMatcher into AntPathMatcher--Also initializing the capacity of the AntPathStringMatcher cache to 256 now.-
__label__adaptive + add implicit (String) type for typed string- values w/o a specified type--
__label__adaptive Revised- PersistenceExceptionTranslationInterceptor to lazily retrieve- PersistenceExceptionTranslator beans on demand--Issue: SPR-10894-
__label__corrective JndiObjectFactoryBean explicitly only chooses- public interfaces as default proxy interfaces (SPR-5869)--
__label__corrective "SPR-8883 - RestTemplate.headForHeaders throws- ""IllegalArgumentException: No InputStream specified"" on server resource which- status code are 4xx--"
__label__perfective included qualifier value in debug log for each- transaction (SPR-6811)--
__label__perfective Polish (minor)--
__label__adaptive "Allow setting WSDL document as a Resource--Prior to this change  LocalJaxWsServiceFactory allowed specifying a WSDL-document URL. Now users may also specify a WSDL document represented as-a Spring Resource object for convenience.--Issue: SPR-9909-"
__label__adaptive Provide alternative message code resolver styles--Introduce new 'style' property to DefaultMessageCodesResolver allowing-for alternative message styles. Current styles are PREFIX_ERROR_CODE-and POSTFIX_ERROR_CODE. The default style retains existing behavior.--Issue: SPR-9707-
__label__corrective "Guard against null in -visitInnerClass--Issue: SPR-8358 SPR-8186-"
__label__perfective "Prepared for JDK 1.9--Aiming for the JdkVersion class to support one generation ahead now  in order for the test suite to properly detect 1.7/1.8+ JVMs even when running against a JDK 1.9 preview at some point.-"
__label__perfective Polish MockHttpServletRequestBuilder--
__label__perfective added test with custom repository annotation--
__label__adaptive more work on enabling non-namespace extensions of- xml parsing--
__label__perfective "SPR-9056 Make DelegatingWebMvcConfiguration- config callbacks not final--It should be possible to progress from extending-WebMvcConfigurerAdapter (w/ @EnableWebMvc) to extending-WebMvcConfigurationSupport directly  to extending-DelegatingWebMvcConfigurationSupport. This change-makes that possible.-"
__label__corrective SPR-6466 - ContentNegotiatingViewResolver can not- handle View implementations returning null as content type--
__label__adaptive Add context hierarchy tests to Spring MVC Test--Issue: SPR-5613-
__label__perfective SPR-5973: Extract UriComponentTemplate out of- UriTemplate--
__label__corrective "Fix conversion of Message<?> payload for replies--If a custom MessageConverter is set  it is not used for replies defined-via the Message abstraction. This commit harmonizes the behaviour of the-`MessagingMessageConverter` so that the conversion of the payload can-be converted for both incoming and outgoing messages.--Issue: SPR-12912-"
__label__corrective fixed scheduling tests--
__label__corrective "Consistent support for JTA 1.1- TransactionSynchronizationRegistry--JtaTransactionManager's configuration options for a TransactionSynchronizationRegistry are now in sync with the options for UserTransaction/TransactionManager. Specifically  there are setTransactionSynchronizationRegistry/getTransactionSynchronizationRegistry methods for programmatic configuration now.  Motivated by Spring's adapting to a Hibernate JtaPlatform  specifically the Hibernate 4.3 changes in that area.--Issue: SPR-10839-"
__label__perfective "Provide controller level Cache-Control support--Prior to this commit  Cache-Control HTTP headers could be set using-a WebContentInterceptor and configured cache mappings.--This commit adds support for cache-related HTTP headers at the controller-method level  by returning a ResponseEntity instance:--ResponseEntity.status(HttpStatus.OK)-    .cacheControl(CacheControl.maxAge(1  TimeUnit.HOURS).cachePublic())-    .eTag(""deadb33f8badf00d"")-    .body(entity);--Also  this change now automatically checks the ""ETag"" and-""Last-Modified"" headers in ResponseEntity  in order to respond HTTP-""304 - Not Modified"" if necessary.--Issue: SPR-8550-"
__label__perfective "Consistent use of varargs  consistent template- method order--"
__label__perfective Polishing (including removal of javadoc imports- that show as package cycles in IntelliJ)--
__label__corrective AnnotatedElementUtils wraps unexpected exceptions- with descriptive IllegalStateException--Issue: SPR-10441-
__label__corrective "Fix race when flushing messages--The use of an AtomicBoolean and no lock meant that it was possible-for a message to be queued and then never be flushed and sent to the-broker:--1. On t1  a message is received and isConnected is false. The message-   will be queued.-2. On t2  CONNECTED is received from the broker. isConnected is set-   to true  the queue is drained and the queued messages are forwarded-3. On t1  the message is added to the queue--To fix this  checking that isConnected is false (step 1 above) and the-queueing of a message (step 3 above) need to be performed as a unit-so that the flushing of the queued messages can't be interleaved. This-is achieved by synchronizing on a monitor and performing steps 1-and 3 and synchronizing on the same monitor while performing step 2.--The monitor is held while the messages are actually being forwarded-to the broker. An alternative would be to drain the queue into-a local variable  release the monitor  and then forward the messages.-The main advantage of this alternative is that the monitor is held for-less time. It also reduces the theoretical risk of deadlock by not-holding the monitor while making an alien call. The downside of the-alternative is that it may lead to messages being forwarded out of-order. For this reason the alternative approach was rejected.-"
__label__corrective HandlerExecutionChain prevents re-adding the- interceptors array to the list (and declares varargs now)--Issue: SPR-12566-
__label__perfective JavaDoc on- AnnotationConfigApplicationContext-scan(String...)--
__label__corrective SPR-5636 - @RequestMapping matching should be- insensitive to trailing slashes--
__label__corrective Fix minor issue in MockHttpServletRequest--Previously MockHttpServletRequest-sendRedirect did not set the HTTP status-or the Location header. This does not conform to the HttpServletRequest-interface.--MockHttpServletRequest will now:--  - Set the HTTP status to 302 on sendRedirect-  - Set the Location header on sendRedirect-  - Ensure the Location header and getRedirectedUrl are kept in synch--Issue: SPR-9594-
__label__corrective DataSourceUtils lets timeout exceptions through- even for setReadOnly calls (revised; SPR-7226)--
__label__perfective removed unused method; polishing--
__label__perfective "Clean up spring-expression tests warnings--Clean up compiler warnings in the tests of spring-expression. This-commit adds type parameters to some of the types (mostly `List` and-`Map`). Some of them can't be cleaned up  some tests are even-specifically for raw types.-"
__label__perfective ServletRequestAttributes skips well-known- immutable values when updating accessed session attributes--Issue: SPR-11738-
__label__corrective "Fix package cycles in spring-test--Code introduced in conjunction with SPR-5243 introduced package cycles-between the ~.test.context and ~.test.context.web packages. This was-caused by the fact that ContextLoaderUtils worked directly with the-@WebAppConfiguration and WebMergedContextConfiguration types.--To address this  the following methods have been introduced in-ContextLoaderUtils. These methods use reflection to circumvent hard-dependencies on the @WebAppConfiguration and-WebMergedContextConfiguration types.-- - loadWebAppConfigurationClass()- - buildWebMergedContextConfiguration()--Issue: SPR-9924-"
__label__perfective Changed use of AssertThrows to @Test(expected =- ...)--
__label__corrective fixed bug related to array autogrow--
__label__corrective fixed detection of element type in case of nested- collections (SPR-7569)--
__label__corrective bean properties of type enum array/collection can- be populated with comma-separated String (SPR-6547)--
__label__corrective "fixed ""hibernateManagedSession"" mode to actually- work against Hibernate 4.0 (SPR-8776)--"
__label__perfective revised WebApplicationContext lookup--
__label__perfective renamed 'isJava6VisibilityBridgeMethodPair' to- 'isVisibilityBridgeMethodPair' (SPR-8660)--
__label__corrective SPR-7107 - RestTemplate/UriTemplate/UriUtils- improperly encoding UTF-8--
__label__corrective Workaround Javadoc bug with JDK 8 (b112+)--Remove Javadoc linkplain to ExceptionHandler-value() from-AnnotationMethodHandlerExceptionResolver to work around JDK-Javadoc bug 9007707.-
__label__perfective Polishing--
__label__corrective "Resolve nested placeholders via PropertyResolver--Prior to this change  PropertySourcesPropertyResolver (and therefore-all AbstractEnvironment) implementations failed to resolve nested-placeholders as in the following example:--    p1=v1-    p2=v2-    p3=${v1}:{$v2}--Calls to PropertySource-getProperty for keys 'p1' and 'v1' would-successfully return their respective values  but for 'p3' the return-value would be the unresolved placeholders. This behavior is-inconsistent with that of PropertyPlaceholderConfigurer.--PropertySourcesPropertyResolver -getProperty variants now resolve any-nested placeholders recursively  throwing IllegalArgumentException for-any unresolvable placeholders (as is the default behavior for-PropertyPlaceholderConfigurer). See SPR-9569 for an enhancement that-will intoduce an 'ignoreUnresolvablePlaceholders' switch to make this-behavior configurable.--This commit also improves error output in-PropertyPlaceholderHelper-parseStringValue by including the original-string in which an unresolvable placeholder was found.--Issue: SPR-9473  SPR-9569-"
__label__adaptive SPR-5251: URI Templates for @InitBinder--
__label__perfective tests for custom conversion service / validator--
__label__perfective polishing--
__label__adaptive [SPR-8387] Introduced- supports(MergedContextConfiguration) method in the SmartContextLoader SPI;- updated existing loaders accordingly; and fleshed out implementation of and- tests for the new DelegatingSmartContextLoader.--
__label__corrective "Fix nested @Component annotation instantiation- bug--3.1 M2 introduced a regression that causes false positives during-@Configuration class candidate checks. Now performing a call to-AnnotationMetadata-isInterface in addition to checks for @Component and-@Bean annotations when determining whether a candidate is a 'lite'-configuration class. Annotations are in the end interfaces  so both-are filtered out at once.--Issue: SPR-8761-"
__label__corrective Improve StringUtils.cleanPath--Issue: SPR-11793-
__label__adaptive "SpringJUnit4ClassRunnerAppCtxTests now verifies- seamless support for using @Inject in addition to @Autowired  etc.--"
__label__perfective Improve documentation of SpringFactoriesLoader--
__label__corrective Servlet/PortletRequestDataBinder perform- unwrapping for MultipartRequest as well (SPR-7795)--
__label__perfective SPR-5624 - A default HandlerExceptionResolver- that resolves standard Spring exceptions--
__label__corrective Fix Jackson @JSONView when using XML- serialization--Issue: SPR-12149-
__label__adaptive Add putIfAbsent on Cache abstraction--This commit adds a putIfAbsent method to the Cache interface. This-method offers an atomic put if the key is not already associated in-the cache.--Issue: SPR-11400-
__label__adaptive Add Jackson2ObjectMapperBeanFactory--Issue: SPR-9739-
__label__perfective revised version checks and exception signatures--
__label__adaptive added DataSourceFactory strategy; promoted- EmbeddedDatabaseConfigurer strategy to public API; added ability to add any- number of SQL scripts for db population--
__label__corrective Hibernate synchronization properly unbinds- Session even in case of afterCompletion exception (SPR-8757)--
__label__corrective fixed JSR-303 Validator delegation code- (SPR-6557)--
__label__corrective IdToEntityConverter defensively handles access to- getDeclaredMethods--Issue: SPR-11758-
__label__corrective SQLStateSQLExceptionTranslator checks exception- class name for timeout indication before resorting to- UncategorizedSQLException--Issue: SPR-11959-
__label__perfective Improve exception message--Issue: SPR-12898-
